int eG(int b,string c);string fG(int b,string c);string gG(int b,string c);string hG(int b,string c);int iG(int b,string c);void jG();int fH(int b,string c);native void DebugString(string b);native void DebugUnit(unit b);native void DebugInt(int b);native void DebugFixed(float b);native void DebugPoint(point b);native void AISetDifficulty(int b,int c,bool d);native bool AIGetDifficulty(int b,int c);native void AIStart(int b,bool c,int d);native bool AIGivingUp(int b);native void AIGoodGame(int b);native bool AIIsCampaign(int b);native void AISetAPM(int b,int c);native unit AIGrabUnit(int b,string c,int d,point e);native int AIState(int b,int c);native void AISetSpecificState(int b,int c,int d);native void AISetAllStates(int b,int c);native void AISetFlag(int b,int c,bool d);native bool AIGetFlag(int b,int c);native void AITechFlag(int b,int c,int d,string e,int f);native void AIResetUserData(int b);native void AISetUserString(int b,int c,string d);native string AIGetUserString(int b,int c);native void AISetUserInt(int b,int c,int d);native int AIGetUserInt(int b,int c);native void AIAddStringInt(int b,string c,int d);native float AIGetTime();native int AIGetTotalStartLocs();native int AIGetGroundStartLocs(point b);native int AIGetAirStartLocs(point b);native int AIGetTotalTownLocs();native int AIGetGroundTownLocs(point b);native int AIGetAirTownLocs(point b);native int AIRandomVal(int b,int c);native void AINewChooseSubState(int b,int c,int d,int e,int f);native void AISetSubStateChance(int b,int c);native int AIChooseSubState();native bool AIWantsMultipleTransport(int b);native void AISetWantsMultipleTransport(int b,bool c);native int AIGetNumMobileTransports(int b);native point AIGetBestCreepSpot(int b,unit c,float d);native void AIAddDetectionDanger(int b,string c);native bool AIDefaultSuspectDetectionDanger(int b);native bool AIAnyWorkersFleeingNearby(int b,point c,float d);native int AIGetNumEnemies(int b);native int AIGetNumAllies(int b);native point AIPlacementNearbyFindTest(int b,point c,float d,string
e);native void AIAddToExtraScoutGroup(int b,unit c);native bool AIOfferNewScout(int b,unit c);native bool AIAnyAllyAttacking(int b);native point AIBestAllyAttackPoint(int b,wave c);native bool AIAnyAllyNeedsDefending(int b);native point AIBestAllyDefendPoint(int b,wave c);native void AIGlobalSuicide(int b);native wave AIUnitGetWave(unit b);native unitgroup AIWaveGetUnits(wave b);native unitgroup AIGetAllEscorts(unit b);native unitgroup AIGetAllEscortsGroup(unitgroup b);native void AIRemoveUnitFromAnyWaves(unit b);native void AIRemoveGroupFromAnyWaves(unitgroup b);native unitgroup AIGetUnitsInWavesWithTarget(int b,wavetarget c);native bool AIIsScriptControlled(unit b);native void AISetUnitScriptControlled(unit b,bool c);native void AISetGroupScriptControlled(unitgroup b,bool c);native bool AIIsSuicideUnit(unit b);native void AISetUnitSuicide(unit b,bool c);native void AISetGroupSuicide(unitgroup b,bool c);native bool AIIsNotUsableInWaves(unit b);native void AISetUnitNotUsableInWaves(unit b,bool c);native void AISetGroupNotUsableInWaves(unitgroup b,bool c);native void AISetWantsToUpgrade(unit b);native void AIInitCampaignTowns(int b);native void AIInitCampaignHarvest(int b);native void AIDeclareTown(int b,int c,point d);native int AIGetMainTown(int b);native void AISetMainTown(int b,int c);native void AIUpdateMainTown(int b);native int AIGetTownState(int b,int c);native float AIGetTownEstablishedTime(int b,int c);native point AIGetTownLocation(int b,int c);native int AIGetClosestTown(int b,point c);native int AIGetNextUnusedTownSlot(int b);native int AIGetBuildingCountInTown(int b,int c,string d,int e);native bool AIIsTownHarvestRunning(int b,int c);native void AIHarvest(int b,int c);native void AIHarvestRate(int b,int c);native void AIHarvestBonus(int b,float c);native void AISetGasPeonCountOverride(int b,int c,int d);native int AIGetCurPeonCount(int b,int c);native int AIGetMinPeonCount(int b,int c);native int AIGetMaxPeonCount(int b,int c);native int AIGetMineralAmountLeft(int b,int c);native int
AIGetGasAmountLeft(int b,int c);native int AIGetMineralNumSpots(int b,int c);native int AIGetRawGasNumSpots(int b,int c);native point AIGetGatherLocation(int b,int c);native point AIGetGatherDefLocation(int b,int c);native int AIExpand(int b,point c,string d);native unitgroup AIGetTownThreats(int b,int c);native unit AIGetObstruction(int b);native bool AIHasNearbyOpenExpansion(int b);native void AIScout(int b);native void AISetNumScouts(int b,int c);native void AISetScoutTimes(int b,int c,int d,int e,int f);native point AIGetNextScoutLoc(int b);native void AIClearCampaignScout(int b);native void AIBuild(int b,int c,int d,string e,int f,int g);native void AITrain(int b,int c,int d,string e,int f);native void AIResearch(int b,int c,int d,string e);native void AIMakeAlways(int b,int c,int d,string e,int f);native void AIMakeOnce(int b,int c,int d,string e,int f);native void AIClearBuildQueue(int b);native void AIClearTrainQueue(int b);native void AIClearResearchQueue(int b);native bool AIHasRes(int b,int c,int d);native int AITechCount(int b,string c,int d);native void AITechCountFixupSingle(int b,string c,string d);native void AITechCountFixupEither(int b,string c,string d,string e);native void AITechCountFixupInOrder(int b,string c,string d,string e);native int AIKnownUnitCount(int b,int c,string d);native void AIResetCounterUnits(int b);native void AICounterUnit(int b,string c,float d,string e);native int AICounterUnits(int b,int c,string d);native point AIGetRallyPoint(unit b);native void AISetPowerBuilding(int b,string c);native void AISetCreepBuilding(int b,string c,string d);native void AIClearStock(int b);native void AIEnableStock(int b);native void AISetStockEx(int b,int c,int d,string e,int f,int g);native void AISetStock(int b,int c,string d);native void AISetStockOpt(int b,int c,string d);native void AISetStockUnitNext(int b,int c,string d,bool e);native bool AISetStockTown(int b,string c,string d);native bool AISetStockExpand(int b,string c,int d);native void AISetStockExtra(int b,int c,string d,int
e);native void AISetStockFarms(int b,string c,bool d);native void AISetStockPeons(int b,int c,string d,bool e,bool f);native void AINewTechStock(int b);native void AITechStockAdd(string b);native void AISetStockTechNext(int b);void FJ(int b,int c,string d,string e);void GJ(int b,int c,string d,string e);native void AIDefaultEconomy(int b,string c,string d,string e,string f,int g,bool h);native void AIDefaultExpansion(int b,string c,int d,int e,int f);native void AIClearLimitTech(int b);native void AILimitTech(int b,int c,int d,int e,int f,int g,int h);native void AIImportantTech(int b,string c);native void AILimitStockLarva(int b,string c);native bool AIHasStock(int b);native bool AIHasStockFromTown(int b,int c);native void AIRemoveStockFromTown(int b,int c);native int AIDefaultGetObjectType(int b,string c);native string AIDefaultGetMaker(int b,string c);native string AIDefaultGetFirstMissingReq(int b,string c);native string AIDefaultGetFirstUnfinishedReq(int b,string c);native int AIDefaultGetFullMakeTime(int b,string c);native string AIGetBaseName(string b);native string AIGetBuildAtName(string b);native void AIReqCountAsBuiltObject(int b,string c);native void AIReqAddSpecialMaker(string b,string c,string d,int e);native void AIBaseThink(unit b,unitgroup c);native bool AIEvalTacticalData(unit b,string c);native int AICast(unit b,order c,marker d,bool e);native int AICastFlee(unit b,unit c,int d,marker e);native bool AINearbyUnits(int b,string c,point d,float e,int f);native unitgroup AIFindUnits(int b,string c,point d,float e,int f);native bool AISameCommand(unit b,unit c);native unit AILastAttacker(unit b);native int AILastAttack(unit b);native bool AIControlWantsToMove(unit b);native bool AIControlForceToMove(unit b);native bool AIControlWantsToUnburrow(unit b);native bool AIControlWantsToBurrow(unit b);native bool AIControlForceUnburrow(unit b);native bool AIUnitIsInCombat(unit b);native bool AIIsIgnoredByWave(unit b);native void AISetIgnoredByWave(unit b,bool c);native point AIGetHomePosition(unit b);
native point AIGetCloakedAttacker(int b);native void AIClearCloakedAttacker(int b,point c);native bool AISawCloakedUnit(int b);native point AIRandomSpawnPoint(int b,region c,float d,float e,float f);native point AIBestTargetPoint(unitgroup b,int c,int d,float e,float f,point g,float h,int i);native unit AIDefaultCombatPriority(unit b,unitgroup c,unitgroup d);native bool AICloakEvaluate(unit b,float c,float d,float e);native bool AICombatTargetProduction(int b,int c);native bool AICombatTargetDropOffs(int b,int c);native bool AICombatTargetFood(int b,int c);native bool AICombatTargetActiveProduction(int b,int c);native bool AICombatTargetWorkers(int b,int c);native bool AICombatTargetAllyThreats(int b,int c);native bool AICombatTargetSelfThreats(int b,int c);native bool AICombatTargetCurrent(int b,int c);native bool AICombatTargetAir(int b,int c);native bool AICombatTargetMovers(int b,int c);native bool AICombatTargetInjuries(int b,int c);native bool AICombatTargetInAttackRange(int b,int c);native bool AICombatTargetThreats(int b,int c);native bool AICombatTargetHealers(int b,int c);native bool AICombatTargetSiege(int b,int c);native bool AICombatTargetAttackers(int b,int c);native bool AICombatTargetSpecial(int b,int c);native bool AICombatAvoidTimedUnits(int b,int c);native bool AICombatAvoidNonThreats(int b,int c);native bool AICombatAvoidWeakUnits(int b,int c);native bool AICombatAvoidDisabledUnits(int b,int c);native void AITransportIgnore(int b,string c);native void AITransportSetPanic(int b,float c);native void AITransportSetReturn(int b,point c);native waveinfo AIWaveInfoCreate();native waveinfo AIWaveInfo(wave b);native void AIWaveInfoAdd(waveinfo b,string c,int d);native int AIWaveInfoAttack(waveinfo b,int c,point d,wavetarget e,int f);native int AIWaveInfoSuicide(waveinfo b,int c,point d,wavetarget e,int f);native int AIWaveInfoScout(waveinfo b,int c,point d,int e);native string AIWaveToString(wave b);native text AIWaveToText(wave b);native wave AIWaveCreate(waveinfo b,int c,point d);native void
AIWaveAddUnit(wave b,unit c);native void AIWaveAddUnitPriority(wave b,unit c,int d);native void AIWaveRemoveUnit(wave b,unit c);native int AIWaveUnitCount(wave b);native int AIWaveDetectorCount(wave b);native void AIWaveSetType(wave b,int c,wavetarget d);native int AIWaveState(wave b);native void AIWaveDelete(wave b);native wavetarget AIWaveTargetUnit(unit b);native wavetarget AIWaveTargetUnitGroup(unitgroup b);native wavetarget AIWaveTargetUnitPoint(unit b);native wavetarget AIWaveTargetPoint(point b);native wavetarget AIWaveTargetPlayer(playergroup b);native wavetarget AIWaveTargetMelee(int b);native wavetarget AIWaveTargetMeleeHarass(int b);native wavetarget AIWaveTargetMeleeDrop(int b,point c,point d);native wavetarget AIWaveTargetMeleeDefend(int b);native wavetarget AIWaveTargetMerge(wave b);native wavetarget AIWaveTargetPatrol(int b);native wavetarget AIWaveTargetEscort(unitgroup b,int c);native wavetarget AIWaveTargetEscortNL(unitgroup b,int c);native wavetarget AIWaveTargetGatherO(int b,int c);native wavetarget AIWaveTargetGatherD(int b,int c);native wavetarget AIWaveTargetRegion(region b,int c);native point AIWaveTargetGatherOPoint(int b,int c);native point AIWaveTargetGatherDPoint(int b,int c);native unit AIWaveTargetGetUnit(wavetarget b);native unitgroup AIWaveTargetGetUnitGroup(wavetarget b);native wavetarget AIWaveHarassRetreat(int b,wave c,float d);native wavetarget AIWaveGetTarget(wave b);native bool AIWaveIsInCombat(wave b);native int AIWaveGetTimeInCombat(wave b);native int AIWaveGetTimeSinceCombat(wave b);native int AIWaveGetTimeSinceOrdered(wave b);native int AIWaveGetTimeSinceRetreat(wave b);native bool AIDefenseThreat(int b,int c,wave d);native int AIDefenseThreatEval(int b,int c);native int AIWaveEval(wave b);native int AIWaveEvalRatio(wave b,float c);native int AIUnitAreaEvalRatio(unit b,float c);native int AIEvalRatio(int b);native void AIEvalSetCustomIndex(int b);native int AILastWaveEvalStaticRatio();native void AIWaveTargetAddWaypoint(wavetarget b,point c,bool d,int e);native void
AIWaveTargetClearWaypoints(wavetarget b);native wave AIWaveGet(int b,int c);native void AIWaveSet(int b,int c,wave d);native int AIWaveType(wave b);native void AIWaveMerge(int b,int c,int d);native void AIWaveMergeMelee(int b);native wave WaveLastCreated();native point AIGetBestTarget(int b,playergroup c,point d,int e);native bool AIFindDropAttackTarget(int b,point c);native point AILastDropLocation();native point AILastDropGoal();native float AIGetNextDropTimeCheck(int b);native void AISetNextDropTimeCheck(int b,float c);native int AILastAttackRatio(wave b);native int AILastAttackStartEval(wave b);native void AIAttackWaveAddUnits(int b,int c,string d);void PJ(int b,int c,int d,int e,string f);void QJ(int b,int c,int d,string e);native int AIAttackWaveSend(int b,int c,bool d);native void AIAttackWaveCancel(wave b);native void AIAttackWaveSetGatherPoint(int b,point c);native void AIAttackWaveUseUnit(int b,unit c);native void AIAttackWaveUseGroup(int b,unitgroup c);native void AIAttackWaveAddEscortUnit(int b,unit c,unit d,float e,float f);native void AIAttackWaveAddEscortType(int b,string c,unit d,float e,float f);native void AIAttackWaveSetTargetUnit(int b,unit c);native void AIAttackWaveSetTargetUnitGroup(int b,unitgroup c);native void AIAttackWaveSetTargetUnitPoint(int b,unit c);native void AIAttackWaveSetTargetPoint(int b,point c);native void AIAttackWaveSetTargetPlayer(int b,playergroup c);native void AIAttackWaveSetTargetMelee(int b);native void AIAttackWaveSetTargetMeleeHarass(int b);native void AIAttackWaveSetTargetMeleeDrop(int b,point c,point d);native void AIAttackWaveSetTargetMeleeDefend(int b);native void AIAttackWaveSetTargetMerge(int b,wave c);native void AIAttackWaveSetTargetPatrol(int b,int c);native void AIAttackWaveSetTargetEscort(int b,unitgroup c,int d);native void AIAttackWaveSetTargetEscortNL(int b,unitgroup c,int d);native void AIAttackWaveSetTargetGatherO(int b,int c);native void AIAttackWaveSetTargetGatherD(int b,int c);native void AIAttackWaveSetTargetRegion(int b,region c,int d);native
void AIAttackWaveSetGatherEarlyNoReplace(int b);native void AIAttackWaveSetKeepAlive(int b);native void AIAttackWaveAddWaypoint(int b,point c,bool d);native void AIAttackWaveClearWaypoints(int b);native void AISetMinimumBullyCount(int b,string c,int d);native void AISetGeneralRebuildCount(int b,bool c,int d);native void AISetSpecificRebuildCount(int b,string c,int d);native void AISetBullyAttackWavePercent(int b,int c);native void AINearestTownLimitWaveGather(int b,bool c);native void AINearestTownBullyRebuild(int b,bool c);native void AIToggleBulliesInRegion(int b,region c,bool d);native void AIResetBullyRebuildCountsInRegion(int b,region c);native void AIClearAllBullies(int b);native void AIAddBully(int b,string c,point d,int e);native string AIGetBullyType(unit b);void hL(string b);void iL(int b,string c);void jL(int b,string c);void kL(string b,int c);void lL(string b,string c);void mL(string b,int c,string d,int e);void nL(string b,int c,string d,int e,string f,int g);void oL(string b,bool c);string pL(int b);string qL(int b);void rL(int b,string c,wave d);void sL(int b);bool tL(bool b,bool c);void vL();string wL(int b);void xL(int b,int c);void yL(int b,int c,int d);void zL(int b);void AL(int b,string c);void BL(int b,int c,string d,string e);void CL(int b,string c,int d,string e);void DL(int b,unit c,wave d);void EL(int b,unit c);order FL(int b,string c,int d);order GL(int b,unit c,string d);order HL(int b,unit c,string d,int e);unit IL(unit b,unitgroup c,unitgroup d);void JL(int b,wave c);void KL(int b,wave c);void LL(int b,wave c);void ML(int b,wave c,int d);void NL(int b,wave c);void OL(int b,wave c);void PL(int b,unit c,bool d);bool QL(int b);bool RL(int b,wave c,int d);bool SL(int b);bool TL(int b);bool UL(int b,wave c);void VL(int b,wave c,int d);void WL(int b,wave c);void XL(int b,wave c,int d);int YL(int b,int c,int d,int e,int f);void ZL(int b,int c,string d,int e,int f,int g);bool aM(int b,int c,string d);bool bM(int b);void cM(int b,int c);void dM(int b,int c);bool eM(int b,int c,int d,string
e,string f,string g,int h,string i);int fM(int b);int gM(int b);int hM(int b,int c);int iM(int b,int c,int d,int e);void jM(int b);void kM(int b);void lM(int b,int c,int d);bool mM(int b,string c,int d,bool e,int f);bool nM(int b,string c);bool oM(int b,string c);bool pM(int b,string c);bool qM(int b,string c);void rM(int b,string c,int d);bool sM(int b,string c,int d,bool e,int f,int g);bool tM(int b,string c,int d);bool uM(int b);bool vM(int b);bool wM(int b);bool xM(int b,string c,int d,bool e,int f,int g);bool yM(int b,string c,int d);bool zM(int b,string c,int d);bool AM(int b,string c,int d);bool BM(int b,string c,int d);bool CM(int b,string c,int d,int e);bool DM(int b,string c,int d);bool EM(int b,string c,int d);bool FM(int b,string c,int d);bool GM(int b,string c,int d);string HM(string b,string c);string IM(string b,string c,string d);void JM(int b);void KM(int b,int c);void LM(int b,int c);void MM(int b,int c);native aifilter AIFilter(int b);native void AISetFilterAlliance(aifilter b,int c);native void AISetFilterMarker(aifilter b,int c,int d,marker e);native void AISetFilterSelf(aifilter b,unit c);native void AISetFilterBits(aifilter b,unitfilter c);native void AISetFilterRange(aifilter b,unit c,float d);native void AISetFilterLife(aifilter b,float c,float d);native void AISetFilterLifeLost(aifilter b,float c,float d);native void AISetFilterLifePercent(aifilter b,float c,float d);native void AISetFilterLifeSortReference(aifilter b,float c,float d);native void AISetFilterLifeMod(aifilter b,int c,float d);native void AISetFilterLifePerMarker(aifilter b,float c,marker d);native void AISetFilterShields(aifilter b,float c,float d);native void AISetFilterPlane(aifilter b,int c);native void AISetFilterCanAttackEnemy(aifilter b,int c,int d);native void AISetFilterCanAttackAlly(aifilter b,bool c,bool d);native void AISetFilterBehaviorCount(aifilter b,int c,int d,string e);native unitgroup AIGetFilterGroup(aifilter b,unitgroup c);native unitgroup AIFilterCasters(unitgroup b);native unitgroup
AIFilterPathable(unitgroup b,point c);native unitgroup AIFilterGathering(unitgroup b,int c,float d);native float AIUnitGroupStrength(unitgroup b);native float AIAllyEnemyRatio(int b,point c,unitfilter d,float e,float f);native bool AIIsFollowingUnit(unit b,string c);native int AIGetPlayerGroup(unitgroup b);native bool AINearbyPlaneTest(point b,int c,float d,int e,int f);string CN(int b,string c,string d);string DN(int b,string c,string d);string EN(int b,string c,string d);string FN(int b,string c,string d);string GN(int b,string c,string d);float HN(int b,string c,string d);float IN(int b,string c,string d);float JN(int b,string c,string d);float KN(int b,string c,string d);float LN(int b,string c,string d);int MN(int b,string c,string d);int NN(int b,string c,string d);int ON(int b,string c,string d);int PN(int b,string c,string d);int QN(int b,string c,string d);unitgroup RN(int b,string c,unitgroup d);unitgroup SN(int b,string c,unitgroup d);unitgroup TN(int b,string c,unitgroup d);native void AISetTacticalAttackTargetPoint(unit b,point c);native void AISetTacticalAttackTargetUnit(unit b,unit c);native order AIUnitGroupGetValidOrder(unitgroup b,order c,unit d,bool e);bool WN(int b,int c,int d);bool XN(unit b,order c,marker d,bool e);marker YN(unit b,string c);void ZN(unitgroup b,unitgroup c);bool aO(order b);point bO(point b,point c,float d);void cO(int b);void dO(int b,bool c);float gO(int b,unit c);order kO(int b,unit c,unitgroup d,float e,marker f);bool lO(int b,unit c,unitgroup d);bool mO(int b,unit c,unitgroup d);bool nO(int b,unit c,unitgroup d);void oO(int b,unit c,unitgroup d);float pO(int b,unit c);void qO(int b,unit c,unitgroup d);float rO(int b,unit c);float sO(int b);order uO(int b,unit c,unitgroup d);order vO(int b,unit c,unitgroup d);void wO(int b,unit c,unitgroup d);float xO(int b,unit c);order AO(int b,unit c,unitgroup d,marker e,bool f);void EO(unitgroup b);void FO(int b,unit c,unitgroup d);void GO(int b,unit c,unitgroup d);float HO(int b,unit c);void JO(int b,unit c,unitgroup d);void
KO(int b,unit c,unitgroup d);float LO(int b,unit c);order MO(int b,unit c,unitgroup d,marker e);void NO(int b,unit c,unitgroup d);float OO(int b,unit c);order PO(int b,unit c,unitgroup d,marker e);void UO(int b,unit c,unitgroup d);float VO(int b,unit c);order XO(int b,unit c,unitgroup d,marker e);void YO(int b,unit c,unitgroup d);order ZO(int b,unit c,unitgroup d,marker e);void aP(int b,unit c,unitgroup d);float bP(int b,unit c);point cP(int b,unit c,unitgroup d,bool e);void dP(int b,unit c,unitgroup d);void eP(int b,unit c,unitgroup d);unit iP(int b,unit c,unitgroup d,bool e);bool jP(int b,unit c,unitgroup d,int e,int f,string g,string h);order kP(int b,unit c);bool lP(int b,unit c);void mP(int b,unit c,unitgroup d);void nP(int b,unit c,unitgroup d);bool oP(int b,unit c);void pP(int b,unit c,unitgroup d);float qP(int b,unit c);void rP(int b,unit c,unitgroup d);float sP(int b,unit c);order vP(int b,unit c,unitgroup d,marker e);bool wP(int b,unit c,unitgroup d,bool e);float xP(int b);void zP(int b,unit c,unitgroup d);float AP(int b,unit c);order BP(int b,unit c);order CP(int b,unit c);order DP(int b,unit c);void EP(int b,unit c,unitgroup d);float FP(int b,unit c);order HP(int b,unit c,unitgroup d,marker e,marker f,bool g);float IP(int b);order JP(int b,unit c,unitgroup d,bool e);void NP(int b,unit c,unitgroup d);float PP(int b,unit c);order QP(int b,unit c,unitgroup d,marker e);void RP(int b,unit c,unitgroup d);float SP(int b,unit c);order UP(int b,unit c,unitgroup d,float e);bool VP(int b,unit c,unitgroup d);void WP(int b,unit c,unitgroup d);float XP(int b,unit c);void YP(int b,unit c,unitgroup d,string e);void ZP(int b,unit c,unitgroup d);void aQ(int b,unit c,unitgroup d);void bQ(int b,unit c,unitgroup d);
const int z=0;const int A=1;const int B=2;const int C=3;const int D=4;const int E=5;const int F=6;const int G=7;const int H=8;const int I=9;const int J=10;const int K=11;const int L=12;const int M=13;const int N=14;const int O=15;const int P=16;const int Q=17;const int R=18;const int S=19;const int T=20;const int U=21;const int V=22;const int W=23;const int X=24;const int Y=25;const int Z=26;const int ab=27;const int bb=28;const int cb=29;const int db=30;const int eb=31;const int fb=32;const int gb=33;const int hb=34;const int ib=35;const int jb=36;const string kb="CAbil";const string lb="CAbilProgress";const string mb="CAbilEffect";const string nb="CAbilQueueable";const string ob="CAbilRedirect";const string pb="CAbilArmMagazine";const string qb="CAbilAttack";const string rb="CAbilAugment";const string sb="CAbilBattery";const string tb="CAbilBeacon";const string ub="CAbilBehavior";const string vb="CAbilBuild";const string wb="CAbilBuildable";const string xb="CAbilEffectInstant";const string yb="CAbilEffectTarget";const string zb="CAbilHarvest";const string Ab="CAbilInteract";const string Bb="CAbilInventory";const string Cb="CAbilLearn";const string Db="CAbilMerge";const string Eb="CAbilMergeable";const string Fb="CAbilMorph";const string Gb="CAbilMorphPlacement";const string Hb="CAbilMove";const string Ib="CAbilPawn";const string Jb="CAbilQueue";const string Kb="CAbilRally";const string Lb="CAbilRedirectInstant";const string Mb="CAbilRedirectTarget";const string Nb="CAbilResearch";const string Ob="CAbilRevive";const string Pb="CAbilSpecialize";const string Qb="CAbilStop";const string Rb="CAbilTrain";const string Sb="CAbilTransport";const string Tb="CAbilWarpable";const string Ub="CAbilWarpTrain";const int Vb=0;const int Wb=1;const string Xb="Untoggled";const string Yb="Toggled";const int Zb=0;const int ac=1;const int bc=2;const int cc=3;const int dc=4;const int ec=5;const int fc=6;const string gc="Approach";const string hc="Wait";const string ic="Construct";const string jc="Halt";const string kc="Resume";const
string lc="Finish";const string mc="Collide";const int nc=0;const int oc=1;const int pc=2;const int qc=3;const int rc=4;const string sc="Approach";const string tc="Prep";const string uc="Cast";const string vc="Channel";const string wc="Finish";const int xc=0;const int yc=1;const int zc=2;const int Ac=3;const int Bc=4;const int Cc=5;const int Dc=6;const string Ec="ApproachResource";const string Fc="WaitAtResource";const string Gc="Harvest";const string Hc="WaitToReturn";const string Ic="WaitForDropOff";const string Jc="ApproachDropOff";const string Kc="DropOff";const int Lc=0;const int Mc=1;const int Nc=2;const int Oc=3;const int Pc=4;const int Qc=5;const int Rc=6;const int Sc=7;const int Tc=8;const int Uc=9;const int Vc=10;const int Wc=11;const int Xc=12;const int Yc=13;const int Zc=14;const int ad=15;const string bd="Approach";const string cd="Wait";const string dd="AbilsStart";const string ed="AbilsEnd";const string fd="ActorStart";const string gd="ActorEnd";const string hd="CollideStart";const string id="CollideEnd";const string jd="FacingStart";const string kd="FacingEnd";const string ld="MoverStart";const string md="MoverEnd";const string nd="StatsStart";const string od="StatsEnd";const string pd="UnitStart";const string qd="UnitEnd";const int rd=0;const int sd=1;const int td=2;const int ud=3;const int vd=4;const int wd=5;const int xd=6;const int yd=7;const int zd=8;const int Ad=9;const int Bd=10;const int Cd=11;const int Dd=12;const int Ed=13;const int Fd=14;const int Gd=15;const int Hd=16;const int Id=17;const int Jd=18;const int Kd=19;const string Ld="Ammo1";const string Md="Ammo2";const string Nd="Ammo3";const string Od="Ammo4";const string Pd="Ammo5";const string Qd="Ammo6";const string Rd="Ammo7";const string Sd="Ammo8";const string Td="Ammo9";const string Ud="Ammo10";const string Vd="Ammo11";const string Wd="Ammo12";const string Xd="Ammo13";const string Yd="Ammo14";const string Zd="Ammo15";const string ae="Ammo16";const string be="Ammo17";const string ce="Ammo18";const string de="Ammo19";const
string ee="Ammo20";const int fe=0;const string ge="Execute";const int he=0;const string ie="Execute";const int je=0;const string ke="Execute";const int le=0;const int me=1;const string ne="Cancel";const string oe="Move";const int pe=0;const int qe=1;const string re="On";const string se="Off";const int te=0;const int ue=1;const int ve=2;const int we=3;const int xe=4;const int ye=5;const int ze=6;const int Ae=7;const int Be=8;const int Ce=9;const int De=10;const int Ee=11;const int Fe=12;const int Ge=13;const int He=14;const int Ie=15;const int Je=16;const int Ke=17;const int Le=18;const int Me=19;const int Ne=20;const int Oe=21;const int Pe=22;const int Qe=23;const int Re=24;const int Se=25;const int Te=26;const int Ue=27;const int Ve=28;const int We=29;const int Xe=30;const string Ye="Build1";const string Ze="Build2";const string af="Build3";const string bf="Build4";const string cf="Build5";const string df="Build6";const string ef="Build7";const string ff="Build8";const string gf="Build9";const string hf="Build10";const string jf="Build11";const string kf="Build12";const string lf="Build13";const string mf="Build14";const string nf="Build15";const string of="Build16";const string pf="Build17";const string qf="Build18";const string rf="Build19";const string sf="Build20";const string tf="Build21";const string uf="Build22";const string vf="Build23";const string wf="Build24";const string xf="Build25";const string yf="Build26";const string zf="Build27";const string Af="Build28";const string Bf="Build29";const string Cf="Build30";const string Df="Halt";const int Ef=0;const string Ff="Cancel";const int Gf=0;const int Hf=1;const string If="Execute";const string Jf="Cancel";const int Kf=0;const int Lf=1;const string Mf="Execute";const string Nf="Cancel";const int Of=0;const int Pf=1;const int Qf=2;const string Rf="Gather";const string Sf="Return";const string Tf="Cancel";const int Uf=0;const string Vf="Designate";const int Wf=0;const int Xf=1;const int Yf=2;const int Zf=3;const int ag=4;const string bg="Drop";const
string cg="Move";const string dg="Take";const string eg="ItemInstant";const string fg="ItemTarget";const int gg=0;const int hg=1;const int ig=2;const int jg=3;const int kg=4;const int lg=5;const int mg=6;const int ng=7;const int og=8;const int pg=9;const int qg=10;const int rg=11;const int sg=12;const int tg=13;const int ug=14;const int vg=15;const int wg=16;const int xg=17;const int yg=18;const int zg=19;const string Ag="Learn1";const string Bg="Learn2";const string Cg="Learn3";const string Dg="Learn4";const string Eg="Learn5";const string Fg="Learn6";const string Gg="Learn7";const string Hg="Learn8";const string Ig="Learn9";const string Jg="Learn10";const string Kg="Learn11";const string Lg="Learn12";const string Mg="Learn13";const string Ng="Learn14";const string Og="Learn15";const string Pg="Learn16";const string Qg="Learn17";const string Rg="Learn18";const string Sg="Learn19";const string Tg="Learn20";const int Ug=0;const int Vg=1;const string Wg="SelectedUnits";const string Xg="WithTarget";const int Yg=0;const int Zg=1;const string ah="Execute";const string bh="Cancel";const int ch=0;const string dh="Cancel";const int eh=0;const int fh=1;const int gh=2;const int hh=3;const int ih=4;const string jh="Move";const string kh="Patrol";const string lh="HoldPos";const string mh="AcquireMove";const string nh="Turn";const int oh=0;const int ph=1;const int qh=2;const int rh=3;const int sh=4;const int th=5;const int uh=6;const int vh=7;const int wh=8;const int xh=9;const int yh=10;const int zh=11;const int Ah=12;const int Bh=13;const int Ch=14;const int Dh=15;const int Eh=16;const int Fh=17;const int Gh=18;const int Hh=19;const string Ih="Pawn1";const string Jh="Pawn2";const string Kh="Pawn3";const string Lh="Pawn4";const string Mh="Pawn5";const string Nh="Pawn6";const string Oh="Pawn7";const string Ph="Pawn8";const string Qh="Pawn9";const string Rh="Pawn10";const string Sh="Pawn11";const string Th="Pawn12";const string Uh="Pawn13";const string Vh="Pawn14";const string Wh="Pawn15";const string Xh="Pawn16";const
string Yh="Pawn17";const string Zh="Pawn18";const string ai="Pawn19";const string bi="Pawn20";const int ci=0;const int di=1;const string ei="CancelLast";const string fi="CancelSlot";const int gi=0;const int hi=1;const int ii=2;const int ji=3;const string ki="Rally1";const string li="Rally2";const string mi="Rally3";const string ni="Rally4";const int oi=0;const string pi="Execute";const int qi=0;const string ri="Execute";const int si=0;const int ti=1;const int ui=2;const int vi=3;const int wi=4;const int xi=5;const int yi=6;const int zi=7;const int Ai=8;const int Bi=9;const int Ci=10;const int Di=11;const int Ei=12;const int Fi=13;const int Gi=14;const int Hi=15;const int Ii=16;const int Ji=17;const int Ki=18;const int Li=19;const int Mi=20;const int Ni=21;const int Oi=22;const int Pi=23;const int Qi=24;const int Ri=25;const int Si=26;const int Ti=27;const int Ui=28;const int Vi=29;const string Wi="Research1";const string Xi="Research2";const string Yi="Research3";const string Zi="Research4";const string aj="Research5";const string bj="Research6";const string cj="Research7";const string dj="Research8";const string ej="Research9";const string fj="Research10";const string gj="Research11";const string hj="Research12";const string ij="Research13";const string jj="Research14";const string kj="Research15";const string lj="Research16";const string mj="Research17";const string nj="Research18";const string oj="Research19";const string pj="Research20";const string qj="Research21";const string rj="Research22";const string sj="Research23";const string tj="Research24";const string uj="Research25";const string vj="Research26";const string wj="Research27";const string xj="Research28";const string yj="Research29";const string zj="Research30";const int Aj=0;const int Bj=1;const int Cj=2;const int Dj=3;const int Ej=4;const int Fj=5;const int Gj=6;const int Hj=7;const int Ij=8;const int Jj=9;const int Kj=10;const int Lj=11;const int Mj=12;const int Nj=13;const int Oj=14;const int Pj=15;const int Qj=16;const int Rj=17;const int
Sj=18;const int Tj=19;const string Uj="Revive1";const string Vj="Revive2";const string Wj="Revive3";const string Xj="Revive4";const string Yj="Revive5";const string Zj="Revive6";const string ak="Revive7";const string bk="Revive8";const string ck="Revive9";const string dk="Revive10";const string ek="Revive11";const string fk="Revive12";const string gk="Revive13";const string hk="Revive14";const string ik="Revive15";const string jk="Revive16";const string kk="Revive17";const string lk="Revive18";const string mk="Revive19";const string nk="Revive20";const int ok=0;const int pk=1;const int qk=2;const int rk=3;const int sk=4;const int tk=5;const int uk=6;const int vk=7;const int wk=8;const int xk=9;const int yk=10;const int zk=11;const int Ak=12;const int Bk=13;const int Ck=14;const int Dk=15;const int Ek=16;const int Fk=17;const int Gk=18;const int Hk=19;const string Ik="Specialize1";const string Jk="Specialize2";const string Kk="Specialize3";const string Lk="Specialize4";const string Mk="Specialize5";const string Nk="Specialize6";const string Ok="Specialize7";const string Pk="Specialize8";const string Qk="Specialize9";const string Rk="Specialize10";const string Sk="Specialize11";const string Tk="Specialize12";const string Uk="Specialize13";const string Vk="Specialize14";const string Wk="Specialize15";const string Xk="Specialize16";const string Yk="Specialize17";const string Zk="Specialize18";const string al="Specialize19";const string bl="Specialize20";const int cl=0;const int dl=1;const int el=2;const int fl=3;const string gl="Stop";const string hl="HoldFire";const string il="Cheer";const string jl="Dance";const int kl=0;const int ll=1;const int ml=2;const int nl=3;const int ol=4;const int pl=5;const int ql=6;const int rl=7;const int sl=8;const int tl=9;const int ul=10;const int vl=11;const int wl=12;const int xl=13;const int yl=14;const int zl=15;const int Al=16;const int Bl=17;const int Cl=18;const int Dl=19;const int El=20;const int Fl=21;const int Gl=22;const int Hl=23;const int Il=24;const int Jl=25;const
int Kl=26;const int Ll=27;const int Ml=28;const int Nl=29;const string Ol="Train1";const string Pl="Train2";const string Ql="Train3";const string Rl="Train4";const string Sl="Train5";const string Tl="Train6";const string Ul="Train7";const string Vl="Train8";const string Wl="Train9";const string Xl="Train10";const string Yl="Train11";const string Zl="Train12";const string am="Train13";const string bm="Train14";const string cm="Train15";const string dm="Train16";const string em="Train17";const string fm="Train18";const string gm="Train19";const string hm="Train20";const string im="Train21";const string jm="Train22";const string km="Train23";const string lm="Train24";const string mm="Train25";const string nm="Train26";const string om="Train27";const string pm="Train28";const string qm="Train29";const string rm="Train30";const int sm=0;const int tm=1;const int um=2;const int vm=3;const int wm=4;const string xm="Load";const string ym="UnloadAll";const string zm="UnloadAt";const string Am="UnloadUnit";const string Bm="LoadAll";const int Cm=0;const string Dm="Cancel";const int Em=0;const int Fm=1;const int Gm=2;const int Hm=3;const int Im=4;const int Jm=5;const int Km=6;const int Lm=7;const int Mm=8;const int Nm=9;const int Om=10;const int Pm=11;const int Qm=12;const int Rm=13;const int Sm=14;const int Tm=15;const int Um=16;const int Vm=17;const int Wm=18;const int Xm=19;const string Ym="Train1";const string Zm="Train2";const string an="Train3";const string bn="Train4";const string cn="Train5";const string dn="Train6";const string en="Train7";const string fn="Train8";const string gn="Train9";const string hn="Train10";const string in="Train11";const string jn="Train12";const string kn="Train13";const string ln="Train14";const string mn="Train15";const string nn="Train16";const string on="Train17";const string pn="Train18";const string qn="Train19";const string rn="Train20";const int sn=0;const int tn=1;const int un=2;const int vn=3;const int wn=4;const int xn=5;const int yn=6;const int zn=7;const int An=8;const int
Bn=9;const int Cn=10;const int Dn=11;const int En=12;const int Fn=13;const int Gn=14;const int Hn=15;const int In=16;const int Jn=17;const int Kn=18;const int Ln=19;const int Mn=20;const int Nn=21;const int On=22;const int Pn=23;const string Qn="CEffect";const string Rn="CEffectResponse";const string Sn="CEffectApplyBehavior";const string Tn="CEffectApplyForce";const string Un="CEffectCreateHealer";const string Vn="CEffectCreatePersistent";const string Wn="CEffectCreateUnit";const string Xn="CEffectDamage";const string Yn="CEffectDestroyHealer";const string Zn="CEffectDestroyPersistent";const string ao="CEffectEnumArea";const string bo="CEffectEnumTransport";const string co="CEffectIssueOrder";const string eo="CEffectLaunchMissile";const string fo="CEffectModifyPlayer";const string go="CEffectModifyUnit";const string ho="CEffectReleaseMagazine";const string io="CEffectRemoveBehavior";const string jo="CEffectSet";const string ko="CEffectSwitch";const string lo="CEffectTeleport";const string mo="CEffectTransferBehavior";const string no="CEffectUseCalldown";const string oo="CEffectUseMagazine";const int po=0;const string qo="CGame";const int ro=0;const int so=1;const int to=2;const int uo=3;const int vo=4;const int wo=5;const int xo=6;const int yo=7;const int zo=8;const int Ao=9;const string Bo="Passive";const string Co="Vision";const string Do="Control";const string Eo="Spend";const string Fo="Trade";const string Go="SeekHelp";const string Ho="GiveHelp";const string Io="Chat";const string Jo="Defeat";const string Ko="Pushable";const int Lo=0;const int Mo=1;const int No=2;const int Oo=3;const int Po=4;const int Qo=5;const int Ro=6;const string So="None";const string To="User";const string Uo="Computer";const string Vo="Neutral";const string Wo="Hostile";const string Xo="Referee";const string Yo="Spectator";const int Zo=0;const int ap=1;const int bp=2;const int cp=3;const int dp=4;const int ep=5;const int fp=6;const int gp=7;const int hp=8;const int ip=9;const int jp=10;const int kp=11;const int lp=12;const int
mp=13;const int np=14;const int op=15;const int pp=16;const int qp=17;const int rp=18;const int sp=19;const int tp=20;const int up=21;const int vp=22;const int wp=23;const int xp=24;const int yp=25;const int zp=26;const int Ap=27;const int Bp=28;const int Cp=29;const int Dp=30;const int Ep=31;const int Fp=32;const int Gp=33;const int Hp=34;const int Ip=35;const int Jp=36;const int Kp=37;const int Lp=38;const int Mp=39;const int Np=40;const int Op=41;const int Pp=42;const int Qp=43;const string Rp="Self";const string Sp="Player";const string Tp="Ally";const string Up="Neutral";const string Vp="Enemy";const string Wp="Air";const string Xp="Ground";const string Yp="Light";const string Zp="Armored";const string aq="Biological";const string bq="Robotic";const string cq="Mechanical";const string dq="Psionic";const string eq="Massive";const string fq="Structure";const string gq="Hover";const string hq="Heroic";const string iq="Worker";const string jq="RawResource";const string kq="HarvestableResource";const string lq="Missile";const string mq="Destructible";const string nq="Item";const string oq="Uncommandable";const string pq="CanHaveEnergy";const string qq="CanHaveShields";const string rq="PreventDefeat";const string sq="PreventReveal";const string tq="Buried";const string uq="Cloaked";const string vq="Visible";const string wq="Stasis";const string xq="UnderConstruction";const string yq="Dead";const string zq="Revivable";const string Aq="Hidden";const string Bq="Hallucination";const string Cq="Invulnerable";const string Dq="HasEnergy";const string Eq="HasShields";const string Fq="Benign";const string Gq="Passive";const string Hq="Detector";const string Iq="Radar";const int Jq=0;const int Kq=1;const int Lq=2;const int Mq=3;const string Nq="Id";const string Oq="Link";const string Pq="CasterPlayer";const string Qq="CasterUnit";const int Rq=0;const int Sq=1;const int Tq=2;const string Uq="Air";const string Vq="Glide";const string Wq="Ground";const int Xq=0;const int Yq=1;const string Zq="Ground";const string ar="Air";
const int br=0;const int cr=1;const int dr=2;const int er=3;const string fr="Spell";const string gr="Melee";const string hr="Ranged";const string ir="Splash";const int jr=0;const int kr=1;const int lr=2;const int mr=3;const int nr=4;const int or=5;const int pr=6;const int qr=7;const int rr=8;const int sr=9;const int tr=10;const int ur=11;const int vr=12;const int wr=13;const int xr=14;const int yr=15;const int zr=16;const string Ar="Normal";const string Br="Remove";const string Cr="Blast";const string Dr="Disintegrate";const string Er="Eat";const string Fr="Electrocute";const string Gr="Eviscerate";const string Hr="Fire";const string Ir="Freeze";const string Jr="Impact";const string Kr="Morph";const string Lr="Silentkill";const string Mr="Squish";const string Nr="Timeout";const string Or="Unlink";const string Pr="UnderConstruction";const string Qr="Salvage";const int Rr=0;const int Sr=1;const int Tr=2;const int Ur=3;const string Vr="Minerals";const string Wr="Vespene";const string Xr="Terrazine";const string Yr="Custom";const int Zr=0;const int as=1;const string bs="Diffuse";const string cs="Emissive";const int ds=0;const int es=1;const int fs=2;const int gs=3;const int hs=4;const int is=5;const string js="Rally";const string ks="Attack";const string ls="Defend";const string ms="Expand";const string ns="Harass";const string os="Scout";const int ps=0;const int qs=1;const string rs="Cheer";const string ss="Dance";const int ts=0;const int us=1;const int vs=2;const int ws=3;const int xs=4;const int ys=5;const int zs=6;const int As=7;const int Bs=8;const int Cs=9;const int Ds=10;const int Es=11;const int Fs=12;const int Gs=13;const int Hs=14;const int Is=15;const int Js=16;const int Ks=17;const int Ls=18;const int Ms=19;const int Ns=20;const int Os=21;const int Ps=22;const int Qs=23;const int Rs=24;const int Ss=25;const int Ts=26;const int Us=27;const int Vs=28;const int Ws=29;const int Xs=30;const int Ys=31;const int Zs=32;const int at=33;const int bt=34;const int ct=35;const int dt=36;const int et=37;const int
ft=38;const int gt=39;const int ht=40;const int it=41;const int jt=42;const int kt=43;const int lt=44;const int mt=45;const int nt=46;const int ot=47;const int pt=48;const int qt=49;const int rt=50;const string st="Abil";const string tt="Achievement";const string ut="AchievementTerm";const string vt="Actor";const string wt="Alert";const string xt="AttachMethod";const string yt="Beam";const string zt="Behavior";const string At="Button";const string Bt="Camera";const string Ct="Cliff";const string Dt="CliffMesh";const string Et="Conversation";const string Ft="ConversationState";const string Gt="Cursor";const string Ht="DSP";const string It="Effect";const string Jt="Error";const string Kt="Footprint";const string Lt="FoW";const string Mt="Game";const string Nt="GameUI";const string Ot="Item";const string Pt="ItemClass";const string Qt="ItemContainer";const string Rt="Light";const string St="Loot";const string Tt="Model";const string Ut="Mover";const string Vt="Race";const string Wt="Requirement";const string Xt="RequirementNode";const string Yt="Reverb";const string Zt="ScoreResult";const string au="ScoreValue";const string bu="Sound";const string cu="Soundtrack";const string du="Tactical";const string eu="TargetFind";const string fu="TargetSort";const string gu="Terrain";const string hu="TerrainObject";const string iu="TerrainTex";const string ju="Texture";const string ku="Tile";const string lu="Turret";const string mu="Unit";const string nu="Upgrade";const string ou="Validator";const string pu="Water";const string qu="Weapon";const int ru=0;const string su="CUnit";const int tu=0;const int uu=1;const int vu=2;const int wu=3;const int xu=4;const int yu=5;const int zu=6;const int Au=7;const int Bu=8;const int Cu=9;const int Du=10;const int Eu=11;const int Fu=12;const int Gu=13;const int Hu=14;const int Iu=15;const int Ju=16;const int Ku=17;const int Lu=18;const int Mu=19;const int Nu=20;const int Ou=21;const int Pu=22;const int Qu=23;const int Ru=24;const int Su=25;const int Tu=26;const int Uu=27;const int Vu=28;
const int Wu=29;const int Xu=30;const int Yu=31;const int Zu=32;const int av=33;const int bv=34;const int cv=35;const int dv=36;const int ev=37;const int fv=38;const int gv=39;const int hv=40;const int iv=41;const int jv=42;const int kv=43;const int lv=44;const int mv=45;const int nv=46;const int ov=47;const string pv="Bounce";const string qv="Turnable";const string rv="Movable";const string sv="Worker";const string tv="CreateVisible";const string uv="Unclickable";const string vv="Uncommandable";const string wv="Unhighlightable";const string xv="Untooltipable";const string yv="Unselectable";const string zv="Untargetable";const string Av="Uncursorable";const string Bv="Hero";const string Cv="IndividualSubgroups";const string Dv="NoDraw";const string Ev="PreventReveal";const string Fv="PreventDefeat";const string Gv="PreventDestroy";const string Hv="DefeatReveal";const string Iv="Uncloakable";const string Jv="Missile";const string Kv="Undetectable";const string Lv="Unradarable";const string Mv="UseLineOfSight";const string Nv="PressForwardDisabled";const string Ov="KillCredit";const string Pv="TownAlert";const string Qv="Invulnerable";const string Rv="Destructible";const string Sv="Cloaked";const string Tv="Buried";const string Uv="NoScore";const string Vv="IgnoreTerrainZInit";const string Wv="TurnBeforeMove";const string Xv="AlwaysThreatens";const string Yv="NoDeathEvent";const string Zv="NoPortraitTalk";const string aw="TownCamera";const string bw="AIThreatGround";const string cw="AIThreatAir";const string dw="AILifetime";const string ew="AISiege";const string fw="AIDefense";const string gw="AICaster";const string hw="AISupport";const string iw="ShowResources";const string jw="ArmorDisabledWhileConstructing";const string kw="Pawnable";const int lw=0;const int mw=1;const int nw=2;const int ow=3;const int pw=4;const int qw=5;const int rw=6;const int sw=7;const int tw=8;const int uw=9;const string vw="Light";const string ww="Armored";const string xw="Biological";const string yw="Mechanical";const string
zw="Robotic";const string Aw="Psionic";const string Bw="Massive";const string Cw="Structure";const string Dw="Hover";const string Ew="Heroic";const int Fw=0;const int Gw=1;const int Hw=2;const int Iw=3;const int Jw=4;const int Kw=5;const int Lw=6;const int Mw=7;const string Nw="Alternate";const string Ow="Queued";const string Pw="Preempt";const string Qw="SmartClick";const string Rw="SmartRally";const string Sw="Subgroup";const string Tw="SetAutoCast";const string Uw="SetAutoCastOn";const int Vw=0;const int Ww=1;const int Xw=2;const string Yw="CWeapon";const string Zw="CWeaponLegacy";const string ax="CWeaponStrafe";const int bx=-1;const int cx=32;const int dx=0;const int ex=0;const int fx=1;const int gx=4;const int hx=5;const int ix=0;const int jx=1;const int kx=0;const int lx=1;const int mx=2;const int nx=3;const int ox=4;const int px=5;const int qx=0;const int rx=1;const int sx=2;const int tx=0;const int ux=1;const int vx=2;const int wx=4;const int xx=5;const int yx=6;const int zx=8;const int Ax=9;const int Bx=10;const int Cx=15;const int Dx=16;const int Ex=17;const bool Fx=true;const bool Gx=false;const int Hx=14;const int Ix=0;const int Jx=1;const int Kx=2;const int Lx=0;const int Mx=1;const int Nx=4;const int Ox=2;const int Px=3;const int Qx=0;const int Rx=1;const int Sx=2;const int Tx=1;const int Ux=4;const string Vx="MineralField";const string Wx="HighYieldMineralField";const string Xx="VespeneGeyser";const string Yx="Archon";const string Zx="Carrier";const string ay="Colossus";const string by="DarkTemplar";const string cy="HighTemplar";const string dy="Immortal";const string ey="Mothership";const string fy="Disruptor";const string gy="Observer";const string hy="Phoenix";const string iy="Probe";const string jy="Stalker";const string ky="VoidRay";const string ly="WarpPrism";const string my="WarpPrismPhasing";const string ny="Zealot";const string oy="Assimilator";const string py="CyberneticsCore";const string qy="DarkShrine";const string ry="Obelisk";const string sy="FleetBeacon";const string ty="Forge";
const string uy="Gateway";const string vy="Nexus";const string wy="PhotonCannon";const string xy="Pylon";const string yy="RoboticsBay";const string zy="RoboticsFacility";const string Ay="Stargate";const string By="WarpGate";const string Cy="TemplarArchive";const string Dy="TwilightCouncil";const string Ey="ProtossAirArmorsLevel1";const string Fy="ProtossAirArmorsLevel2";const string Gy="ProtossAirArmorsLevel3";const string Hy="ProtossAirWeaponsLevel1";const string Iy="ProtossAirWeaponsLevel2";const string Jy="ProtossAirWeaponsLevel3";const string Ky="ExtendedThermalLance";const string Ly="ProtossGroundArmorsLevel1";const string My="ProtossGroundArmorsLevel2";const string Ny="ProtossGroundArmorsLevel3";const string Oy="ProtossGroundWeaponsLevel1";const string Py="ProtossGroundWeaponsLevel2";const string Qy="ProtossGroundWeaponsLevel3";const string Ry="HighTemplarKhaydarinAmulet";const string Sy="PsiStormTech";const string Ty="haltech";const string Uy="ObserverGraviticBooster";const string Vy="ProtossShieldsLevel1";const string Wy="ProtossShieldsLevel2";const string Xy="ProtossShieldsLevel3";const string Yy="BlinkTech";const string Zy="WarpGateResearch";const string az="GraviticDrive";const string bz="Charge";const string cz="AutoTurret";const string dz="Banshee";const string ez="Battlecruiser";const string fz="Alias_BattlecruiserClass";const string gz="BattlecruiserDefensiveMatrix";const string hz="BattlecruiserHurricane";const string iz="BattlecruiserYamato";const string jz="MagneticMine";const string kz="Ghost";const string lz="Hellion";const string mz="Marauder";const string nz="Marine";const string oz="Medivac";const string pz="Raven";const string qz="Reaper";const string rz="SCV";const string sz="SiegeTank";const string tz="SiegeTankSieged";const string uz="Alias_SiegeTank";const string vz="Thor";const string wz="VikingFighter";const string xz="VikingFighter";const string yz="VikingAssault";const string zz="Alias_Viking";const string Az="Armory";const string Bz="Barracks";const string
Cz="BarracksNuclearReactor";const string Dz="BarracksTechLab";const string Ez="Bunker";const string Fz="CommandCenter";const string Gz="Alias_CommandCenter";const string Hz="EngineeringBay";const string Iz="Factory";const string Jz="FactoryNuclearReactor";const string Kz="FactoryTechLab";const string Lz="FusionCore";const string Mz="TechLab";const string Nz="GhostAcademy";const string Oz="MercCompound";const string Pz="MissileTurret";const string Qz="NuclearReactor";const string Rz="OrbitalCommand";const string Sz="PlanetaryFortress";const string Tz="Refinery";const string Uz="SensorTower";const string Vz="Starport";const string Wz="StarportNuclearReactor";const string Xz="StarportTechLab";const string Yz="SupplyDepot";const string Zz="Alias_SupplyDepot";const string aA="BansheeCloak";const string bA="ColossalReactor";const string cA="TerranBuildingArmor";const string dA="NeosteelFrame";const string eA="PersonalCloaking";const string fA="GhostMoebiusReactor";const string gA="HighCapacityBarrels";const string hA="TerranInfantryArmorsLevel1";const string iA="TerranInfantryArmorsLevel2";const string jA="TerranInfantryArmorsLevel3";const string kA="TerranInfantryWeaponsLevel1";const string lA="TerranInfantryWeaponsLevel2";const string mA="TerranInfantryWeaponsLevel3";const string nA="ShieldWall";const string oA="StimPack";const string pA="MedivacCaduceusReactor";const string qA="TerranDefenseRangeBonus";const string rA="TitanReactor";const string sA="HunterSeeker";const string tA="ReaperSpeed";const string uA="TerranShipArmorsLevel1";const string vA="TerranShipArmorsLevel2";const string wA="TerranShipArmorsLevel3";const string xA="TerranShipWeaponsLevel1";const string yA="TerranShipWeaponsLevel2";const string zA="TerranShipWeaponsLevel3";const string AA="SiegeTech";const string BA="TerranVehicleArmorsLevel1";const string CA="TerranVehicleArmorsLevel2";const string DA="TerranVehicleArmorsLevel3";const string EA="TerranVehicleWeaponsLevel1";const string FA="TerranVehicleWeaponsLevel2";const string
GA="TerranVehicleWeaponsLevel3";const string HA="Baneling";const string IA="BanelingEgg";const string JA="Broodling";const string KA="Changeling";const string LA="ChangelingZealot";const string MA="ChangelingZergling";const string NA="ChangelingZerglingWings";const string OA="ChangelingMarineShield";const string PA="ChangelingMarine";const string QA="MutaliskCocoon";const string RA="Corruptor";const string SA="CreepTumor";const string TA="Drone";const string UA="Hydralisk";const string VA="Infestor";const string WA="InfestedTerran";const string XA="InfestedTerransEggPlacement";const string YA="Larva";const string ZA="Lurker";const string aB="LurkerEgg";const string bB="SwarmGuardianSpawn";const string cB="Mutalisk";const string dB="Overlord";const string eB="Alias_Overlord";const string fB="OverlordCocoon";const string gB="Overseer";const string hB="Queen";const string iB="Roach";const string jB="BroodLord";const string kB="Ultralisk";const string lB="Zergling";const string mB="BanelingNest";const string nB="CreepTumorBurrowed";const string oB="EvolutionChamber";const string pB="Extractor";const string qB="GreaterSpire";const string rB="Hatchery";const string sB="Alias_Hatchery";const string tB="Hive";const string uB="HydraliskDen";const string vB="Alias_HydraliskDen";const string wB="InfestationPit";const string xB="Lair";const string yB="Alias_Lair";const string zB="LurkerDen";const string AB="NydusNetwork";const string BB="NydusCanal";const string CB="RoachWarren";const string DB="SpawningPool";const string EB="SpineCrawler";const string FB="SpineCrawlerUprooted";const string GB="Spire";const string HB="Alias_Spire";const string IB="SporeCrawler";const string JB="SporeCrawlerUprooted";const string KB="UltraliskCavern";const string LB="Burrow";const string MB="CentrificalHooks";const string NB="EnduringCorruption";const string OB="ZergFlyerWeaponsLevel1";const string PB="ZergFlyerWeaponsLevel2";const string QB="ZergFlyerWeaponsLevel3";const string RB="ZergFlyerArmorsLevel1";const string
SB="ZergFlyerArmorsLevel2";const string TB="ZergFlyerArmorsLevel3";const string UB="ZergGroundArmorsLevel1";const string VB="ZergGroundArmorsLevel2";const string WB="ZergGroundArmorsLevel3";const string XB="hydraliskspeed";const string YB="MetasynapticNode";const string ZB="Disease";const string aC="ZergMeleeWeaponsLevel1";const string bC="ZergMeleeWeaponsLevel2";const string cC="ZergMeleeWeaponsLevel3";const string dC="ZergMissileWeaponsLevel1";const string eC="ZergMissileWeaponsLevel2";const string fC="ZergMissileWeaponsLevel3";const string gC="overlordspeed";const string hC="overlordtransport";const string iC="RazorTech";const string jC="OrganicCarapace";const string kC="GlialReconstitution";const string lC="zerglingattackspeed";const string mC="zerglingmovementspeed";const string nC="AI/Tactical/Danger";const string oC="Abil/EMP/AI";const string pC="Abil/PhaseShift/AI";const string qC="Abil/ForceField/AI";const string rC="Abil/FungalGrowth/AI";const string sC="Abil/FungalGrowth";const string tC="Abil/NeuralParasite";const string uC="Abil/InfestorDisease/AI";const string vC="Abil/Lockdown/AI";const string wC="Abil/D8Charge/AI";const string xC="Abil/D8ChargeFlee/AI";const string yC="Abil/MissilePods/AI";const string zC="Abil/LeviathanCharge/AI";const string AC="Abil/NeuralParsite/AI";const string BC="Abil/PsiStorm/AI";const string CC="Abil/GravitonBeam/AI";const string DC="Abil/SapStructure/AI";const string EC="Abil/Snipe/AI";const string FC="Abil/HunterSeekerMissile/AI";const string GC="Abil/250mmStrikeCannons/AI";const string HC="Abil/UnstableMutation/AI";const string IC="Abil/Yamato/AI";const string JC="FungalGrowth";const string KC="GravitonPrison";const string LC="LockdownB";const string MC="SpawnMutantLarvaTimer";const string NC="PersonalCloaking";const string OC="ProtonCharge";const string PC="PsionicShockwaveBehaviorController";const string QC="stim";const string RC="SupplyDrop";const string SC="SwarmInfestation";const string TC="TemporalRiftUnit";const string UC="UnstableMutation";const string
VC="AcidSporesSearch";const string WC="BanelingU2";const string XC="BanelingU";const string YC="ConsumeDNADamage";const string ZC="ConsumeDNACP";const string aD="EMP2A";const string bD="HybridFAoESearch";const string cD="InfestorDiseaseSearch";const string dD="D8ChargeExplodeDamage";const string eD="HurricaneMissileDamage";const string fD="nuke";const string gD="nukeDamage";const string hD="BarrageSearchArea";const string iD="OmegaStormSearchArea";const string jD="HybridCPlasmaBlastDamage";const string kD="ProbeBuffSearchArea";const string lD="ProtonChargeSearchArea";const string mD="PsionicShockwaveSearchArea";const string nD="PsiStormSearch";const string oD="HunterSeekerDamage";const string pD="PsionicShockwaveCreatePersistent";const string qD="snipeDamage";const string rD="TemporalRiftUnitSearchArea";const string sD="250mmStrikeCannonsDamage";const string tD="250mmStrikeCannonsCreatePersistent";const string uD="Transfusion";const string vD="YamatoU";const string wD="VortexSearchArea";const string xD="LeviathanChargeU";const string yD="LeviathanCharge";const string zD="ZergVortexSearchArea";const string AD="AutoTurret";const string BD="Reaper";const string CD="SiegeTankSieged";const string DD="SpineCrawler";const string ED="VikingFighter";const string FD="InfestedTerran";const string GD="move";const string HD="move";const string ID="AcidSpores";const string JD="AssaultMode";const string KD="attack";const string LD="AutoTurret";const string MD="Blink";const string ND="CarrierHangar";const string OD="BansheeCloak";const string PD="BurrowBanelingDown";const string QD="BurrowBanelingUp";const string RD="BurrowDroneDown";const string SD="BurrowDroneUp";const string TD="BurrowHydraliskDown";const string UD="BurrowHydraliskUp";const string VD="BurrowInfestorDown";const string WD="BurrowInfestorUp";const string XD="BurrowLurkerDown";const string YD="BurrowLurkerUp";const string ZD="BurrowRoachDown";const string aE="BurrowRoachUp";const string bE="Val03QueenOfBladesBurrow";const string cE="Val03QueenOfBladesUnburrow";
const string dE="BurrowQueenDown";const string eE="BurrowQueenUp";const string fE="BurrowUltraliskDown";const string gE="BurrowUltraliskUp";const string hE="BurrowZerglingDown";const string iE="BurrowZerglingUp";const string jE="SpawnChangeling";const string kE="ConsumeDNA";const string lE="DefensiveMatrix";const string mE="SupplyDepotLower";const string nE="SupplyDepotRaise";const string oE="RestoreResources";const string pE="EMP";const string qE="ArgusLink";const string rE="PhaseShift";const string sE="FighterMode";const string tE="ForceField";const string uE="FungalGrowth";const string vE="GenerateCreep";const string wE="PersonalCloaking";const string xE="GravitonPrison";const string yE="HybridFAoEStun";const string zE="HybridBlink";const string AE="InfestorDisease";const string BE="InfestedTerrans";const string CE="Lockdown";const string DE="D8Charge";const string EE="MissilePods";const string FE="NeuralParasite";const string GE="nuke";const string HE="OdinBarrage";const string IE="Overload";const string JE="CalldownMULE";const string KE="GravitonBeam";const string LE="HybridCPlasmaBlast";const string ME="ProtonCharge";const string NE="PsionicShockwave";const string OE="PsiStorm";const string PE="Indignation";const string QE="Implosion";const string RE="OmegaStorm";const string SE="QueenBuild";const string TE="Rally";const string UE="SapStructure";const string VE="ScannerSweep";const string WE="HunterSeekerMissile";const string XE="ShieldBattery";const string YE="SiegeMode";const string ZE="Unsiege";const string aF="Snipe";const string bF="SpawnMutantLarva";const string cF="SpiderMine";const string dF="StimPack";const string eF="SupplyDrop";const string fF="SpineCrawlerRoot";const string gF="SporeCrawlerRoot";const string hF="SpineCrawlerUproot";const string iF="SporeCrawlerUproot";const string jF="SwarmInfestation";const string kF="TemporalRift";const string lF="ThorReborn";const string mF="250mmStrikeCannons";const string nF="Transfusion";const string oF="UnstableMutation";const string pF="Vortex";const
string qF="UpgradeToWarpGate";const string rF="WormholeTransit";const string sF="PhasingMode";const string tF="TransportMode";const string uF="WraithCloak";const string vF="Yamato";const string wF="LeviathanCharge";const string xF="ZergVortex";const string yF="BunkerTransport";const string zF="CommandCenterTransport";const int AF=0;const int BF=1;const int CF=3;const int DF=4;const string EF="HighTemplarTrain";const int FF=0;const int GF=1;const int HF=2;const int IF=3;const int JF=4;const int KF=5;const int LF=6;const int MF=7;const int NF=8;const int OF=9;const int PF=-1;const int QF=0;const int RF=1;const int SF=2;const int TF=3;const int UF=4;const int VF=5;const int WF=6;const int XF=7;const int YF=8;const int ZF=9;const int aG=-1;const int bG=0;const int cG=1;const int dG=2;const int lG=0;const int mG=1;const int nG=2;const int oG=4;const int pG=8;const int qG=16;const int rG=32;const int sG=64;const int tG=128;const int uG=256;const int vG=512;const int wG=1024;const int xG=2048;const int yG=4096;const int zG=8192;const int AG=16384;const int BG=32768;const int CG=65536;const int DG=131072;const int EG=262144;const int FG=524288;const int GG=1048576;const int HG=2097152;const int IG=134217728;const int JG=268435456;const int KG=536870912;const int LG=1073741824;const int MG=mG|qG;const int NG=nG|rG;const int OG=oG|sG;const int PG=pG|tG;const int QG=uG|yG;const int RG=vG|zG;const int SG=wG|AG;const int TG=xG|BG;const int UG=lG;const int VG=EG;const int WG=HG|MG;const int XG=HG|MG;const int YG=EG|TG|mG;const int ZG=EG|TG;const int aH=JG|TG;const int bH=oG|EG|BG|zG|yG|FG;const int cH=oG|EG;const int dH=UG|IG;const int eH=-1;const int gH=0;const int hH=1;const int iH=2;const int jH=3;const int kH=4;const int lH=0;const point mH=null;const marker nH=null;const string oH=null;const abilcmd pH=null;const wave qH=null;const unit rH=null;const bool sH=true;const bool tH=false;const bool uH=true;const bool vH=false;const bool wH=true;const bool xH=false;const int yH=-1;const int zH=-1;const int AH=1;const int
BH=4;const int CH=6;const int DH=-1;const int EH=0;const int FH=1;const int GH=2;const int HH=3;const int IH=4;const int JH=5;const int KH=6;const int LH=7;const int MH=8;const int NH=9;const int OH=10;const int PH=11;const int QH=12;const int RH=13;const int SH=14;const int TH=15;const int UH=16;const int VH=1;const int WH=2;const int XH=3;const int YH=0;const int ZH=1;const int aI=2;const int bI=3;const int cI=4;const int dI=5;const int eI=6;const int fI=7;const int gI=8;const int hI=9;const int iI=10;const int jI=-2;const int kI=-1;const int lI=0;const int mI=1;const int nI=2;const int oI=3;const int pI=4;const int qI=5;const int rI=6;const int sI=7;const int tI=32;const int uI=-1;const int vI=0;const int wI=1;const int xI=2;const int yI=0;const int zI=1;const int AI=2;const int BI=3;const int CI=4;const int DI=5;const int EI=6;const int FI=7;const int GI=8;const int HI=9;const int II=10;const int JI=11;const int KI=0;const int LI=1;const int MI=2;const int NI=3;const int OI=4;const int PI=5;const int QI=6;const int RI=1;const int SI=2;const int TI=4;const int UI=5;const int VI=6;const int WI=8;const int XI=2;const int YI=6;const int ZI=1;const int aJ=2;const int bJ=4;const int cJ=8;const int dJ=16;const int eJ=32;const int fJ=64;const int gJ=49;const int hJ=52;const int iJ=0;const int jJ=1;const int kJ=2;const int lJ=3;const int mJ=4;const int nJ=5;const int oJ=6;const int pJ=7;const int qJ=8;const int rJ=9;const int sJ=10;const int tJ=11;const int uJ=12;const int vJ=0;const int wJ=1;const int xJ=2;const int yJ=3;const int zJ=4;const int AJ=5;const int BJ=0;const int CJ=1;const int DJ=2;const int EJ=3;const bool HJ=true;const bool IJ=false;const int JJ=10;const int KJ=1;const int LJ=2;const int MJ=3;const int OJ=-1;const bool RJ=true;const bool SJ=false;const bool TJ=false;const bool UJ=false;const int VJ=1;const int WJ=2;const int XJ=3;const int YJ=4;const int ZJ=5;const int aK=6;const int bK=7;const int cK=8;const int dK=9;const int eK=10;const int fK=1;const int gK=2;const int hK=3;const int iK=4;const
int jK=5;const int kK=6;const int lK=7;const int mK=8;const int nK=-1;const int oK=0;const int pK=1;const int qK=2;const int rK=3;const int sK=4;const int tK=5;const int uK=6;const int vK=7;const int wK=8;const int xK=9;const int yK=10;const int zK=11;const int AK=12;const int BK=13;const int CK=14;const int DK=15;const int EK=16;const int FK=17;const int GK=18;const int HK=19;const int IK=20;const int JK=21;const int KK=22;const int LK=23;const int MK=24;const int NK=25;const int OK=1;const int PK=2;const int QK=3;const int RK=4;const int SK=5;const int TK=1;const int UK=2;const int VK=3;const int WK=4;const int XK=5;const int YK=6;const int ZK=7;const int aL=8;const float bL=20;const float cL=10;const float dL=8;const float eL=60.0;const float fL=240.0;const int gL=75;bool uL=false;const string NM="Amount";const string OM="AreaArray[0].Radius";const string PM="AreaArray[1].Radius";const string QM="AreaArray[2].Radius";const string RM="AreaArray[0].Fraction";const string SM="AreaArray[1].Fraction";const string TM="AreaArray[2].Fraction";const string UM="AttributeBonus[Structure]";const string VM="AttributeBonus[Armored]";const string WM="AttributeBonus[Psionic]";const string XM="AttributeBonus[Light]";const string YM="DrainVitalCostFactor";const string ZM="VitalArray[0].Change";const string aN="VitalArray[1].Change";const string bN="VitalArray[2].Change";const string cN="Cost[0].Vital[Energy]";const string dN="EnergyMax";const string eN="SearchFilters";const string fN="MinimumRange";const string gN="Modification.VitalRegenArray[Energy]";const string hN="PeriodCount";const string iN="Radius";const string jN="AreaArray[0].RadiusBonus";const string kN="Range[0]";const string lN="Range";const string mN="Sight";const string nN="TargetFilters";const string oN="TargetFilters[0]";const string pN="ValidatorArray[0].value.value";const float qN=0.5;const float rN=0.2;const int sN=0;const int tN=0;const int uN=0;const int vN=0;const int wN=-1;const int xN=-1;const bool yN=true;const bool zN=true;const float AN=0;const
float BN=10;const bool UN=true;const bool VN=false;const float eO=3;const float fO=11;const float tO=1.25;const int yO=425;const int zO=300;const float BO=1.25;const float CO=100.0;const int DO=50;const float IO=1.0;const int QO=16;const int RO=12;const int SO=4;const int TO=QO*SO/RO;const int WO=60;const float fP=4.0;const bool gP=true;const bool hP=false;const int tP=0;const int uP=0;const int yP=65;const float GP=425;const float KP=1.25;const float LP=100.0;const int MP=75;const float OP=8;const int TP=5;
int eG(int b,string c){return AIDefaultGetObjectType(b,c);}string fG(int b,string c){return AIDefaultGetMaker(b,c);}string gG(int b,string c){return AIDefaultGetFirstMissingReq(b,c);}string hG(int b,string c){return AIDefaultGetFirstUnfinishedReq(b,c);}int iG(int b,string c){return AIDefaultGetFullMakeTime(b,c);}void jG(){AIReqAddSpecialMaker(gz,ez,"BattlecruiserSpecialize",0);AIReqAddSpecialMaker(hz,ez,"BattlecruiserSpecialize",1);AIReqAddSpecialMaker(iz,ez,"BattlecruiserSpecialize",3);}int fH(int b,string c){if(c==vy){return VG;}if(c==xy){return XG;}if(c==ry){return ZG;}if(c==wy){return bH;}if(c==oy){return aH;}if(c==Fz){return VG;}if(c==Ez){return bH;}if(c==Pz){return cH;}if(c==Uz){return FG;}if(c==Sz){return bH;}if(c==Tz){return aH;}if(c==Yz){return dH;}if(c==rB){return VG;}if(c==xB){return VG;}if(c==tB){return VG;}if(c==nB){return WG;}if(c==EB){return bH;}if(c==IB){return cH;}if(c==pB){return aH;}return UG;}void FJ(int b,int c,string d,string e){c=c-AITechCount(b,e,lx);if(c>0){AISetStock(b,c+AITechCount(b,d,lx),d);}}void GJ(int b,int c,string d,string e){if(AITechCount(b,e,ox)>0){AISetStock(b,c,d);}}void PJ(int b,int c,int d,int e,string f){AIAttackWaveAddUnits(2,b,f);AIAttackWaveAddUnits(3,c,f);AIAttackWaveAddUnits(4,d,f);AIAttackWaveAddUnits(5,e,f);}void QJ(int b,int c,int d,string e){PJ(b,c,d,d,e);}void hL(string b){if(RJ){TriggerDebugOutput(1,StringToText(b),true);}}void iL(int b,string c){if(RJ){TriggerDebugOutput(1,StringToText("[")+PlayerColorName(PlayerGetColorIndex(b,false))+StringToText("] ")+StringToText(c),true);}}void jL(int b,string c){if(UJ){iL(b,c);}}void kL(string b,int c){hL(b+"= "+IntToString(c));}void lL(string b,string c){hL(b+"= "+c);}void mL(string b,int c,string d,int e){hL(b+"= "+IntToString(c)+", "+d+"= "+IntToString(e));}void nL(string b,int c,string d,int e,string f,int g){hL(b+"= "+IntToString(c)+", "+d+"= "+IntToString(e)+", "+f+"= "+IntToString(g));}void oL(string b,bool c){if(c){hL(b+"= true");}else {hL(b+"= false");}}string pL(int b){if(b==TK){return
"Wait";}if(b==VK){return "Attack";}if(b==WK){return "DropAttack";}if(b==UK){return "Idle";}if(b==XK){return "Scared";}if(b==YK){return "Retreat";}if(b==ZK){return "DropRetreat";}if(b==aL){return "InRetreat";}return "?"+IntToString(b)+"?";}string qL(int b){if(b==zI){return "Idle";}if(b==AI){return "Suicide";}if(b==BI){return "Merge";}if(b==CI){return "Attack";}if(b==EI){return "Defend";}if(b==FI){return "Scout";}if(b==GI){return "Retreat";}if(b==II){return "ClearObs";}if(b==JI){return "Home";}return "?"+IntToString(b)+"?";}void rL(int b,string c,wave d){string e;if(AIDefenseThreat(RI,b,d)){e="true";}else {e="false";}iL(b,"wave="+c+", units="+IntToString(AIWaveUnitCount(d))+", state="+qL(AIWaveState(d))+", ratio="+IntToString(AIWaveEvalRatio(d,cL))+", combat="+IntToString(AIWaveGetTimeInCombat(d))+", safe="+IntToString(AIWaveGetTimeSinceCombat(d))+", threat="+e);}void sL(int b){rL(b,"main",AIWaveGet(b,KI));rL(b,"atck",AIWaveGet(b,MI));rL(b,"dfnd",AIWaveGet(b,LI));rL(b,"div1",AIWaveGet(b,NI));rL(b,"div2",AIWaveGet(b,OI));rL(b,"clob",AIWaveGet(b,PI));rL(b,"home",AIWaveGet(b,QI));mL("peons cur",AIGetCurPeonCount(b,tI),"max",AIGetMaxPeonCount(b,tI));oL("e_flagsScouting",AIGetFlag(b,VJ));oL("e_flagsTimeout",AIGetFlag(b,XJ));}bool tL(bool b,bool c){if(c){sL(StringToInt(StringWord(EventChatMessage(false),2)));}return true;}void vL(){trigger b;if(!uL){b=TriggerCreate("DebugMeleeTrigger");TriggerAddEventChatMessage(b,1,"waves",false);uL=true;}}string wL(int b){if(b==pK){return "Init";}else if(b==qK){return "OpenGnd0";}else if(b==rK){return "OpenGnd1";}else if(b==sK){return "OpenGnd2";}else if(b==tK){return "OpenGnd3";}else if(b==uK){return "OpenGnd4";}else if(b==vK){return "OpenGnd5";}else if(b==wK){return "OpenAir0";}else if(b==xK){return "OpenAir1";}else if(b==yK){return "OpenAir2";}else if(b==zK){return "OpenAir3";}else if(b==AK){return "OpenAir4";}else if(b==BK){return "OpenAir5";}else if(b==CK){return "Mid0";}else if(b==DK){return "Mid1";}else if(b==EK){return "Mid2";}else if(b==FK){return "Mid3";}else
if(b==GK){return "Mid4";}else if(b==HK){return "Mid5";}else if(b==IK){return "Late0";}else if(b==JK){return "Late1";}else if(b==KK){return "Late2";}else if(b==LK){return "Late3";}else if(b==MK){return "Late4";}else if(b==NK){return "Late5";}else if(b==oK){return "Off";}return "?"+IntToString(b)+"?";}void xL(int b,int c){string d;int e=AIState(b,hK);AISetSpecificState(b,hK,c);if(TJ){d="Player "+IntToString(b)+"-"+PlayerRace(b)+" attack state "+pL(e)+" -> "+pL(c);hL(d);}}void yL(int b,int c,int d){string e;int f=AIState(b,fK);int g=AIState(b,gK);AISetSpecificState(b,fK,c);AISetSpecificState(b,gK,d);if(SJ){e="Player "+IntToString(b)+"-"+PlayerRace(b)+" main state "+wL(f)+"("+IntToString(g)+") --> "+wL(c)+"("+IntToString(d)+")";hL(e);}}void zL(int b){string c="Reached end of script for player "+IntToString(b)+"-"+PlayerRace(b)+" : More AI code coming soon.";UIDisplayMessage(PlayerGroupAll(),Ux,StringToText(c));hL(c);yL(b,nK,OK);}void AL(int b,string c){string d="A script logic error occurred for player "+IntToString(b)+"-"+PlayerRace(b)+" : "+c;UIDisplayMessage(PlayerGroupAll(),Ux,StringToText(d));hL(d);yL(b,nK,OK);}void BL(int b,int c,string d,string e){int f=AITechCount(b,e,ox);if(f<1||AIHasRes(b,0,200)||AITechCount(b,d,ox)<8){AISetGasPeonCountOverride(b,kI,zH);}else if(f==1){AISetGasPeonCountOverride(b,kI,3);}else {AISetGasPeonCountOverride(b,kI,c);}}void CL(int b,string c,int d,string e){int f=AITechCount(b,e,ox)+2*AITechCount(b,c,ox);if(f>d){f=d;}AISetStock(b,f,e);}void DL(int b,unit c,wave d){wave e=AIWaveCreate(AIWaveInfoCreate(),b,AIGetGatherLocation(b,kI));AIWaveAddUnit(e,c);AIWaveSetType(e,BI,AIWaveTargetMerge(d));}void EL(int b,unit c){wave d=AIWaveGet(b,KI);if(AIDefenseThreat(RI,b,d)){DL(b,c,d);}else {AIWaveAddUnit(d,c);}}order FL(int b,string c,int d){abilcmd e=AbilityCommand(c,d);order f;if(e==pH){return null;}f=Order(e);OrderSetPlayer(f,b);return f;}order GL(int b,unit c,string d){order e=FL(b,d,0);if(!UnitOrderIsValid(c,e)){return null;}return e;}order HL(int b,unit c,string d,int e){order
f=FL(b,d,e);if(!UnitOrderIsValid(c,f)){return null;}return f;}unit IL(unit b,unitgroup c,unitgroup d){return AIDefaultCombatPriority(b,c,d);}void JL(int b,wave c){int d=AIWaveEvalRatio(c,bL);int e=AILastWaveEvalStaticRatio();int f=60;if(e>90){f=80;}else if(e>40){f=70;}if(d<f){if(AIWaveState(c)!=GI){jL(b,"defend1 set wave = retreat to gather defense");AIWaveSetType(c,GI,AIWaveTargetGatherD(b,tI));}}else if(AIWaveState(c)!=EI){if(d>f+10){if(AIWaveGetTimeSinceOrdered(c)>=20){jL(b,"defend2 set wave = defend vs. threats");AIWaveSetType(c,EI,AIWaveTargetMeleeDefend(b));}}}}void KL(int b,wave c){if(AIDefenseThreat(RI,b,c)){JL(b,c);}else if(AIWaveState(c)!=zI){jL(b,"defend3 set defend = idle at gather defense");AIWaveSetType(c,zI,AIWaveTargetGatherD(b,tI));}}void LL(int b,wave c){unit d=null;int e=AIWaveUnitCount(c);int f=AIWaveState(c);int g=AIState(b,hK);if(AIWaveIsInCombat(c)){return;}if(AIDefenseThreat(RI,b,c)){JL(b,c);return;}if(e>=3&&AIGetFlag(b,XJ)){if(g!=WK&&g!=ZK){AIWaveMerge(b,KI,MI);return;}}if(f!=zI){jL(b,"main2 set main = idle at gather offense");AIWaveSetType(c,zI,AIWaveTargetGatherO(b,tI));}}void ML(int b,wave c,int d){int e;int f;if(AIDefenseThreat(RI,b,c)){JL(b,c);return;}e=AIWaveState(c);if(e==EI){jL(b,"divert1 set divert = idle at gather defense");AIWaveSetType(c,zI,AIWaveTargetGatherD(b,tI));return;}if(!AIGetFlag(b,WJ)){return;}if(AIWaveEvalRatio(c,dL)<100){if(e!=GI){jL(b,"divert2 set divert = retreat to harass point");AIWaveSetType(c,GI,AIWaveHarassRetreat(b,c,dL));}}else if(e!=CI){if(AIWaveGetTimeSinceOrdered(c)>=10){jL(b,"divert3 set divert = attack harass target");AIWaveSetType(c,CI,AIWaveTargetMeleeHarass(b));}}}void NL(int b,wave c){int d;d=AIWaveState(c);if(d!=JI){jL(b,"home set divert = idle at gather defense");AIWaveSetType(c,JI,AIWaveTargetGatherD(b,tI));return;}}void OL(int b,wave c){unit d=AIGetObstruction(b);unit e=null;int f;int g=AIWaveState(c);if(d==null){jL(b,"clearobs1 merge clear obstruction ->
main");AIWaveMerge(b,PI,KI);return;}f=UnitGetPropertyInt(d,ux,Fx);if(AIDefenseThreat(RI,b,c)&&f>20){JL(b,c);return;}e=AIWaveTargetGetUnit(AIWaveGetTarget(c));if(g!=II||d!=e){jL(b,"clearobs2 set clear obstruction = clear obstruction");AIWaveSetType(c,II,AIWaveTargetUnit(d));}}void PL(int b,unit c,bool d){wave e=AIWaveGet(b,LI);wave f=AIWaveGet(b,MI);if(AIWaveUnitCount(f)>=4){if(AIWaveDetectorCount(f)==0){AIWaveAddUnitPriority(f,c,PH);return;}}if(AIWaveDetectorCount(e)==0){AIWaveAddUnitPriority(e,c,PH);return;}if(d){if(AIOfferNewScout(b,c)){return;}}if(AIWaveUnitCount(f)>=4){if(AIWaveDetectorCount(f)<2){AIWaveAddUnitPriority(f,c,PH);return;}}AIAddToExtraScoutGroup(b,c);}bool QL(int b){unit c=null;wave d=null;wave e=null;int f=0;int g=0;int h=0;if(AIGetFlag(b,dK)==false){return false;}if(AIGetTime()<600){return false;}c=AIGetObstruction(b);if(c==null){return false;}d=AIWaveGet(b,PI);f=AIWaveUnitCount(d);if(f>=4){return false;}e=AIWaveGet(b,MI);g=AIWaveUnitCount(e);h=AIWaveEvalRatio(e,cL);if(g>0&&h<80){return false;}return true;}bool RL(int b,wave c,int d){if(!AIDefenseThreat(TI,b,c)){return false;}if(d==UK||d==TK||(AIWaveEval(AIWaveGet(b,KI))+AIWaveEval(AIWaveGet(b,LI))<AIDefenseThreatEval(YI,b))){return true;}return false;}bool SL(int b){wave c=null;if(AIState(b,hK)!=VK){return false;}c=AIWaveGet(b,MI);if(AIWaveUnitCount(c)==0){return false;}if(AIWaveState(c)!=CI){return false;}return true;}bool TL(int b){return RL(b,qH,VK);}bool UL(int b,wave c){int d;d=AIGetNumMobileTransports(b);if(d>=1){AISetWantsMultipleTransport(b,true);}else {return false;}if(d<3){return false;}if(AIGetNextDropTimeCheck(b)>=AIGetTime()){return false;}AISetNextDropTimeCheck(b,AIGetTime()+eL);if(RandomInt(1,100)>gL){return false;}if(!AIFindDropAttackTarget(b,AIGetGatherLocation(b,kI))){return false;}AISetNextDropTimeCheck(b,AIGetTime()+fL);xL(b,WK);jL(b,"attack1drop merge main -> attack; set attack = drop attack");AIWaveMerge(b,KI,MI);AIWaveSetType(c,DI,AIWaveTargetMeleeDrop(b,AILastDropLocation(),AILastDropGoal()));return true;}void VL(int
b,wave c,int d){int e;bool f=false;if(AILastAttackRatio(c)>=120){if(d>=20){xL(b,VK);}else if(d>=10&&AIGetFlag(b,XJ)&&AIWaveGetTimeSinceCombat(c)>=120){xL(b,VK);}}else if(AILastAttackRatio(c)>=80){if(d>=12){if(UL(b,c)){return;}}if(d>=30){xL(b,VK);}else if(d>=15&&AIGetFlag(b,XJ)&&AIWaveGetTimeSinceCombat(c)>=300-5*d){xL(b,VK);}}else {if(d>=12){if(UL(b,c)){return;}}if(d<20){return;}if(PlayerGetPropertyInt(b,gx)>160){f=true;}else {e=AIWaveEval(c)+AIWaveEval(AIWaveGet(b,KI));if(IntToFixed(e)>IntToFixed(AILastAttackStartEval(c))*1.33){f=true;}}if(f){xL(b,VK);}}}void WL(int b,wave c){int d=AIState(b,hK);int e;int f;int g;if(RL(b,c,d)){JL(b,c);return;}if(d==VK){f=AIWaveGetTimeInCombat(c);e=AIWaveEvalRatio(c,cL);if(e>=70&&e<=85&&f<=3){if(AIGetFlag(b,YJ)){xL(b,XK);}else {xL(b,YK);}}else if(e<70){xL(b,YK);}else if(AIWaveState(c)!=CI){jL(b,"attack1 merge main -> attack; set attack = attack vs. melee target");AIWaveMerge(b,KI,MI);AIWaveSetType(c,CI,AIWaveTargetMelee(b));}}if(d==WK){e=AIWaveEvalRatio(c,cL);if(e<80){xL(b,ZK);}if(AIWaveState(c)!=DI){jL(b,"attack1a In drop attack state, but not drop attack wave state?");xL(b,ZK);}}else if(d==XK){e=AIWaveEvalRatio(c,cL);if(e>95){xL(b,VK);}else if(e<70){xL(b,YK);}else if(AIWaveState(c)!=GI){jL(b,"attack2 merge main -> attack; set attack = retreat to gather offense");AIWaveMerge(b,KI,MI);AIWaveSetType(c,GI,AIWaveTargetGatherO(b,kI));}}else if(d==YK){jL(b,"attack3 set attack = retreat to gather offense");AIWaveSetType(c,GI,AIWaveTargetGatherO(b,kI));xL(b,aL);}else if(d==ZK){jL(b,"attack3drop set attack = drop retreat to gather offense");AIWaveSetType(c,HI,AIWaveTargetGatherO(b,kI));xL(b,aL);}else if(d==aL){if(AIWaveState(c)!=GI&&AIWaveState(c)!=HI){jL(b,"attack4 merge main -> attack");AIWaveMerge(b,KI,MI);xL(b,UK);}}else if(d==UK){g=AIWaveUnitCount(c)+AIWaveUnitCount(AIWaveGet(b,KI));if(AIWaveGetTimeSinceRetreat(c)>30){if(AIAnyAllyAttacking(b)){xL(b,VK);}if(PlayerDifficulty(b)>=zJ){if(AIWaveState(c)==zI){VL(b,c,g);}}else {if(g>=30){xL(b,VK);}else
if(AIGetFlag(b,XJ)&&AIWaveGetTimeSinceCombat(c)>=300-10*g){xL(b,VK);}}}if(AIState(b,hK)==UK){if(AIWaveState(c)!=zI){jL(b,"attack5 set attack = idle at gather offense");AIWaveSetType(c,zI,AIWaveTargetGatherO(b,tI));}}}}void XL(int b,wave c,int d){if(AIWaveUnitCount(c)<1){return;}if(d==KI){LL(b,c);}else if(d==LI){KL(b,c);}else if(d==MI){WL(b,c);}else if(d==NI){ML(b,c,iK);}else if(d==OI){ML(b,c,jK);}else if(d==PI){OL(b,c);}else if(d==QI){NL(b,c);}}int YL(int b,int c,int d,int e,int f){if(c>=1&&c<=d){yL(b,e,f);}return c-d;}void ZL(int b,int c,string d,int e,int f,int g){wave h=AIWaveGet(b,MI);if(AIWaveState(h)!=GI){if(AIWaveUnitCount(AIWaveGet(b,KI))>=3||AITechCount(b,d,ox)>=c){jL(b,"merge1 merge main -> attack");AIWaveMerge(b,KI,MI);}}if(AIWaveUnitCount(h)>=e){xL(b,VK);yL(b,f,g);AISetFlag(b,XJ,true);}else if(AIHasRes(b,1000,500)){yL(b,f,g);AISetFlag(b,XJ,true);}}bool aM(int b,int c,string d){if(AITechCount(b,d,nx)<c){AISetStock(b,c,d);AIEnableStock(b);return true;}return false;}bool bM(int b){bool c=false;c=AIDefaultSuspectDetectionDanger(b);return c;}void cM(int b,int c){AIUpdateMainTown(b);}void dM(int b,int c){AIUpdateMainTown(b);}bool eM(int b,int c,int d,string e,string f,string g,int h,string i){int j=AICounterUnits(b,cx,e);if(j<=0){return false;}if(j<c){j=c;}else if(j>d){j=d;}if(AITechCount(b,e,nx)>=j){return false;}if(j>5){AISetStockUnitNext(b,3,g,sH);AISetStockUnitNext(b,h,i,sH);}else if(j>2){AISetStockUnitNext(b,2,g,sH);if(h>2){AISetStockUnitNext(b,2,i,sH);}else {AISetStockUnitNext(b,h,i,sH);}}if(f!=oH){AISetStock(b,1,f);}AISetStockUnitNext(b,j,e,tH);return true;}int fM(int b){return PlayerGetPropertyInt(b,ex)+AIGetMineralAmountLeft(b,tI);}int gM(int b){return AIWaveUnitCount(AIWaveGet(b,KI))+AIWaveUnitCount(AIWaveGet(b,MI));}int hM(int b,int c){return c+PlayerDifficulty(b);}int iM(int b,int c,int d,int e){int f=PlayerDifficulty(b);if(f<d){return c;}return e;}void jM(int
b){AIAddDetectionDanger(b,kz);AIAddDetectionDanger(b,dz);AIAddDetectionDanger(b,ZA);AIAddDetectionDanger(b,by);AIAddDetectionDanger(b,ey);AIAddDetectionDanger(b,Nz);AIAddDetectionDanger(b,Lz);AIAddDetectionDanger(b,zB);AIAddDetectionDanger(b,qy);}void kM(int b){point c;if(RJ){vL();}AIStart(b,false,DifficultyAPM(PlayerDifficulty(b)));if(PlayerDifficulty(b)>=zJ){if(PlayerDifficulty(b)>=AJ){AIHarvestBonus(b,2.0);AISetDifficulty(b,nJ,false);AISetDifficulty(b,oJ,false);}AISetFlag(b,YJ,false);}else {AISetDifficulty(b,iJ,false);AISetDifficulty(b,kJ,false);AISetDifficulty(b,sJ,false);AISetFlag(b,YJ,false);}AISetDifficulty(b,pJ,false);AISetDifficulty(b,qJ,false);AISetDifficulty(b,uJ,false);AISetFlag(b,cK,false);AISetFlag(b,dK,false);AIDeclareTown(b,lI,PlayerStartLocation(b));AISetMainTown(b,lI);AIHarvest(b,lI);AISetNumScouts(b,1);AIScout(b);AISetAllStates(b,1);c=AIWaveTargetGatherOPoint(b,kI);AIWaveSet(b,KI,AIWaveCreate(AIWaveInfoCreate(),b,c));AIWaveSet(b,MI,AIWaveCreate(AIWaveInfoCreate(),b,c));AIWaveSet(b,NI,AIWaveCreate(AIWaveInfoCreate(),b,c));AIWaveSet(b,OI,AIWaveCreate(AIWaveInfoCreate(),b,c));AIWaveSet(b,PI,AIWaveCreate(AIWaveInfoCreate(),b,c));AIWaveSet(b,QI,AIWaveCreate(AIWaveInfoCreate(),b,c));c=AIWaveTargetGatherDPoint(b,kI);AIWaveSet(b,LI,AIWaveCreate(AIWaveInfoCreate(),b,c));AITransportIgnore(b,"VikingAssault");AITransportSetPanic(b,0.6);AITransportSetReturn(b,c);jG();dO(b,true);jM(b);}void lM(int b,int c,int d){AIWaveMerge(b,KI,MI);xL(b,VK);yL(b,c,d);AIResetUserData(b);}bool mM(int b,string c,int d,bool e,int f){AIEnableStock(b);if(e){if(AITechCount(b,c,ox)>=8){AISetGasPeonCountOverride(b,kI,2);}else {AISetGasPeonCountOverride(b,kI,0);}}if(AIGetTime()<d){return true;}lM(b,f,PK);return false;}bool nM(int b,string c){return mM(b,c,480,true,CK);}bool oM(int b,string c){return mM(b,c,450,false,DK);}bool pM(int b,string c){return mM(b,c,420,false,EK);}bool qM(int b,string c){return mM(b,c,390,false,FK);}void rM(int b,string c,int
d){if(AIHasRes(b,0,200)||AITechCount(b,c,ox)<8){AISetGasPeonCountOverride(b,kI,zH);}else {AISetGasPeonCountOverride(b,kI,d);}}bool sM(int b,string c,int d,bool e,int f,int g){AIEnableStock(b);if(e){rM(b,c,d);}if(AIGetTime()<f){return true;}lM(b,g,QK);return false;}bool tM(int b,string c,int d){return sM(b,c,d,true,840,CK);}bool uM(int b){return sM(b,"",0,false,790,DK);}bool vM(int b){return sM(b,"",0,false,740,EK);}bool wM(int b){return sM(b,"",0,false,690,FK);}bool xM(int b,string c,int d,bool e,int f,int g){AIEnableStock(b);if(e){rM(b,c,d);}if(AIGetTime()<f){return true;}lM(b,g,PK);AISetFlag(b,VJ,true);AISetFlag(b,dK,true);return false;}bool yM(int b,string c,int d){return xM(b,c,d,true,1200,IK);}bool zM(int b,string c,int d){return xM(b,c,d,false,1130,JK);}bool AM(int b,string c,int d){return xM(b,c,d,false,1060,KK);}bool BM(int b,string c,int d){return xM(b,c,d,false,990,LK);}bool CM(int b,string c,int d,int e){AIEnableStock(b);rM(b,c,d);if(AIGetTime()%e<5){return true;}AIWaveMerge(b,KI,MI);xL(b,VK);AIResetUserData(b);return false;}bool DM(int b,string c,int d){return CM(b,c,d,300);}bool EM(int b,string c,int d){return CM(b,c,d,280);}bool FM(int b,string c,int d){return CM(b,c,d,260);}bool GM(int b,string c,int d){return CM(b,c,d,240);}string HM(string b,string c){int d=RandomInt(1,2);if(d==1){return b;}return c;}string IM(string b,string c,string d){int e=RandomInt(1,3);if(e==1){return b;}if(e==2){return c;}return d;}void JM(int b){int c=1;while(c<=10){AISetStock(b,AIGetUserInt(b,c),AIGetUserString(b,c));c=c+1;}}void KM(int b,int c){AISetStock(b,1,Bz);AISetStock(b,1,Tz);AISetStock(b,1,Dz);if(c>=2){AISetStock(b,1,Iz);AISetStock(b,1,Kz);if(c>=3){AISetStock(b,1,Vz);AISetStock(b,1,Xz);}}AISetStock(b,1,Hz);if(c>=2){AISetStock(b,1,Uz);AISetStock(b,1,Nz);AISetStock(b,1,Oz);if(c>=3){AISetStock(b,1,Az);if(c>=4){AISetStock(b,1,Lz);}}}}void LM(int b,int
c){AISetStock(b,1,DB);AISetStock(b,1,pB);AISetStock(b,1,oB);AISetStock(b,1,uB);AISetStock(b,1,XB);if(c>=2){AISetStock(b,1,gC);AISetStock(b,1,mB);if(c>=3){AISetStock(b,1,CB);AISetStock(b,1,GB);AISetStock(b,1,wB);if(c>=4){AISetStock(b,1,hC);AISetStock(b,1,KB);AISetStock(b,1,zB);AISetStock(b,1,qB);}}}}void MM(int b,int c){AISetStock(b,1,uy);AISetStock(b,1,ty);AISetStock(b,1,oy);if(c>=3){AISetStock(b,1,zy);AISetStock(b,1,Ay);AISetStock(b,1,Dy);if(c>=4){AISetStock(b,1,Cy);AISetStock(b,1,yy);AISetStock(b,1,qy);AISetStock(b,1,sy);}}}string CN(int b,string c,string d){return CatalogFieldValueGet(ts,c,d,b);}string DN(int b,string c,string d){return CatalogFieldValueGet(Js,c,d,b);}string EN(int b,string c,string d){return CatalogFieldValueGet(rt,c,d,b);}string FN(int b,string c,string d){return CatalogFieldValueGet(nt,c,d,b);}string GN(int b,string c,string d){return CatalogFieldValueGet(As,c,d,b);}float HN(int b,string c,string d){return StringToFixed(CN(b,c,d));}float IN(int b,string c,string d){return StringToFixed(DN(b,c,d));}float JN(int b,string c,string d){return StringToFixed(EN(b,c,d));}float KN(int b,string c,string d){return StringToFixed(FN(b,c,d));}float LN(int b,string c,string d){return StringToFixed(GN(b,c,d));}int MN(int b,string c,string d){return StringToInt(CN(b,c,d));}int NN(int b,string c,string d){return StringToInt(DN(b,c,d));}int ON(int b,string c,string d){return StringToInt(EN(b,c,d));}int PN(int b,string c,string d){return StringToInt(FN(b,c,d));}int QN(int b,string c,string d){return StringToInt(GN(b,c,d));}unitgroup RN(int b,string c,unitgroup d){return UnitGroupFilter(null,bx,d,UnitFilterStr(CN(b,c,oN)),0);}unitgroup SN(int b,string c,unitgroup d){return UnitGroupFilter(null,bx,d,UnitFilterStr(DN(b,c,eN)),0);}unitgroup TN(int b,string c,unitgroup d){return UnitGroupFilter(null,bx,d,UnitFilterStr(EN(b,c,nN)),0);}bool WN(int b,int c,int d){if(AIIsCampaign(b)){return PlayerDifficulty(b)>=c;}return PlayerDifficulty(b)>=d;}bool XN(unit b,order c,marker d,bool e){if(!UnitOrderIsValid(b,c)){return
false;}AICast(b,c,d,e);return true;}marker YN(unit b,string c){marker d=MarkerCastingUnit(c,b);MarkerSetMatchFlag(d,Kq,true);MarkerSetMatchFlag(d,Lq,true);return d;}void ZN(unitgroup b,unitgroup c){int d=UnitGroupCount(b,Ix);unit e=UnitGroupUnit(b,1);unit f;UnitGroupAdd(c,e);while(d>1){f=UnitGroupUnit(b,d);d=d-1;if(AISameCommand(e,f)){UnitGroupAdd(c,f);}}}bool aO(order b){return StringEqual(AbilityCommandGetAbility(OrderGetAbilityCommand(b)),KD,true);}point bO(point b,point c,float d){return PointWithOffsetPolar(b,d,AngleBetweenPoints(c,b));}void cO(int b){AISetNukeGhost(b,kz);AISetNukeNukeEffect(b,fD);AISetNukeCloak(b,eA);AISetNukeNukeAbilLink(b,GE);AISetNukeCloakAbilLink(b,wE);AISetNukeCloakRegenRate(b,LN(b,NC,gN));AISetNukeCloakCost(b,HN(b,wE,cN));AISetNukeNukeCastTime(b,20);AISetNukeDamage(b,IN(b,gD,NM),IN(b,gD,UM));AISetNukeRadiusClose(b,IN(b,gD,OM),IN(b,gD,RM));AISetNukeRadiusMedium(b,IN(b,gD,PM),IN(b,gD,SM));AISetNukeRadiusFar(b,IN(b,gD,QM),IN(b,gD,TM));}void dO(int b,bool c){int d;int e;if(c){d=vJ;e=yJ;}else {d=BJ;e=EJ;}AICombatTargetProduction(b,iM(b,LJ,d,KJ));AICombatTargetDropOffs(b,iM(b,LJ,d,KJ));AICombatTargetFood(b,iM(b,LJ,d,KJ));AICombatTargetActiveProduction(b,iM(b,LJ,d,KJ));AICombatTargetSelfThreats(b,iM(b,LJ,d,KJ));AICombatTargetCurrent(b,iM(b,LJ,d,KJ));AICombatTargetAir(b,iM(b,LJ,d,KJ));AICombatTargetMovers(b,iM(b,LJ,d,KJ));AICombatTargetInAttackRange(b,iM(b,LJ,d,KJ));AICombatTargetThreats(b,iM(b,LJ,d,KJ));AICombatTargetAttackers(b,iM(b,LJ,d,KJ));AICombatTargetSpecial(b,iM(b,LJ,d,KJ));AICombatAvoidNonThreats(b,iM(b,LJ,d,KJ));AICombatAvoidTimedUnits(b,iM(b,LJ,d,KJ));AICombatAvoidWeakUnits(b,iM(b,LJ,d,KJ));AICombatAvoidDisabledUnits(b,iM(b,LJ,d,KJ));AICombatTargetWorkers(b,iM(b,LJ,e,KJ));AICombatTargetAllyThreats(b,iM(b,LJ,e,KJ));AICombatTargetInjuries(b,iM(b,LJ,e,KJ));AICombatTargetHealers(b,iM(b,LJ,e,KJ));AICombatTargetSiege(b,iM(b,LJ,e,KJ));}float gO(int b,unit c){return fO;}order kO(int b,unit c,unitgroup d,float e,marker f){order g;order h;unitgroup i;unitgroup j;unitfilter k;unit l;unit
m;unit n;unit o=null;point p=UnitGetPosition(c);float q=UnitGetFacing(c);point r;int s=5;int t=10;bool u=false;int v=0;int w=0;int x=0;point y;float hO=0;int iO=0;float jO=0;g=FL(b,tE,0);if(!UnitOrderIsValid(c,g)){return g;}i=UnitGroupFilterThreat(d,c,null,0);v=UnitGroupCount(i,Jx);if(v<=0){return g;}if(UnitGetPropertyInt(c,wx,Fx)<=100){if(UnitGetPropertyInt(c,ux,Fx)<=50){u=true;}}k=UnitFilter(0,0,0,0);UnitFilterSetState(k,Zo,Rx);UnitFilterSetState(k,bp,Rx);UnitFilterSetState(k,wp,Sx);UnitFilterSetState(k,qp,Sx);UnitFilterSetState(k,Fp,Sx);UnitFilterSetState(k,np,Sx);while(v>0){l=UnitGroupUnit(i,v);v=v-1;x=UnitGetPropertyInt(l,ux,Fx);hO=UnitGetFacing(l);y=UnitGetPosition(l);h=UnitOrder(l,0);j=UnitGroup(null,bx,RegionCircle(y,s),k,0);w=UnitGroupCount(j,Ix);while(w>0){m=UnitGroupUnit(j,w);w=w-1;iO=UnitGetPropertyInt(m,ux,Fx);if(UnitMarkerCount(m,f)>0){continue;}if(u){if(PointsInRange(p,y,s)){t=1;o=m;break;}}else if(iO<25){t=1;o=m;break;}else if(t>2&&x<25){t=2;n=l;}else if(false){}else if(t>4&&PointsInRange(p,y,s)){t=4;n=l;}else if(t>5&&x<25&&hO-q<90){t=5;n=l;}}if(o){break;}}if(o!=null){if(n){o=n;}}r=UnitGetPosition(o);if(r!=null){return null;}OrderSetTargetPoint(g,r);return g;}bool lO(int b,unit c,unitgroup d){point e;order f;if(!aO(UnitOrder(c,0))){return false;}if(UnitGroupCount(d,Jx)<5){return false;}f=FL(b,EF,GF);if(!UnitOrderIsValid(c,f)){return false;}e=UnitGetPosition(c);if(AINearbyUnits(b,ny,e,5,2)){AICast(c,f,nH,IJ);return true;}if(AINearbyUnits(b,jy,e,5,2)){f=FL(b,EF,HF);AICast(c,f,nH,IJ);return true;}if(AINearbyUnits(b,dy,e,5,2)){f=FL(b,EF,IF);AICast(c,f,nH,IJ);return true;}return false;}bool mO(int b,unit c,unitgroup d){return false;}bool nO(int b,unit c,unitgroup d){return false;}void oO(int b,unit c,unitgroup d){if(lO(b,c,d)){return;}if(mO(b,c,d)){return;}nO(b,c,d);}float pO(int b,unit c){return HN(b,XE,kN)+1;}void qO(int b,unit c,unitgroup d){}float rO(int b,unit c){return MaxF(HN(b,pF,kN)+1,HN(b,kF,kN)+1);}float sO(int b){return HN(b,pF,cN);}order uO(int b,unit c,unitgroup d){point e;unitgroup
f;order g=GL(b,c,pF);if(g==null){return null;}f=SN(b,wD,d);e=AIBestTargetPoint(f,5,40,4.0,IN(b,wD,OM),UnitGetPosition(c),rO(b,c),DH);if(e==null){return null;}OrderSetTargetPoint(g,e);if(!UnitOrderIsValid(c,g)){return null;}return g;}order vO(int b,unit c,unitgroup d){point e;order f=GL(b,c,kF);if(f==null){return null;}e=AIBestTargetPoint(SN(b,rD,d),5,40,3.85,IN(b,rD,OM),UnitGetPosition(c),rO(b,c),DH);if(e==null){return null;}OrderSetTargetPoint(f,e);if(!UnitOrderIsValid(c,f)){return null;}return f;}void wO(int b,unit c,unitgroup d){order e;unitfilter f;float g;aifilter h;if(UnitGetPropertyInt(c,wx,Fx)<sO(b)){return;}h=AIFilter(b);AISetFilterBehaviorCount(h,uN,vN,TC);d=AIGetFilterGroup(h,d);f=UnitFilterStr("-;Missile,Dead,Stasis,Worker");g=AIAllyEnemyRatio(b,UnitGetPosition(c),f,rO(b,c),AN);if(g<tO){e=uO(b,c,d);if(e!=null){AICast(c,e,nH,HJ);return;}}e=vO(b,c,d);if(e!=null){AICast(c,e,nH,HJ);return;}}float xO(int b,unit c){return HN(b,rE,kN)+1;}order AO(int b,unit c,unitgroup d,marker e,bool f){order g;aifilter h;bool i;int j;g=GL(b,c,rE);if(g==null){return null;}if(f){j=zO;}else {j=yO;}i=AINearbyPlaneTest(UnitGetPosition(c),b,xO(b,c),Yq,rx);h=AIFilter(b);AISetFilterBits(h,UnitFilterStr(CN(b,rE,oN)));AISetFilterLife(h,j,wN);AISetFilterMarker(h,sN,tN,e);AISetFilterCanAttackAlly(h,yN,i);d=AIGetFilterGroup(h,d);return AIUnitGroupGetValidOrder(d,g,c,UN);}void EO(unitgroup b){kL("group strength",FixedToInt(AIUnitGroupStrength(b)));}void FO(int b,unit c,unitgroup d){marker e;order f;bool g;unitfilter h;region i;unitgroup j;if(AIEvalTacticalData(c,null)){return;}if(UnitOrderHasAbil(c,rE)||UnitOrderHasAbil(c,OE)){return;}g=(UnitGetPropertyInt(c,Dx,Fx)<DO);if(!g){h=UnitFilterStr("-;Missile,Dead,Stasis,Worker");i=RegionCircle(UnitGetPosition(c),xO(b,c));if((UnitGroupCount(UnitGroupAlliance(b,sx,i,null,dx),Ix)<2)||AIAllyEnemyRatio(b,UnitGetPosition(c),h,xO(b,c),CO)>BO){return;}}e=YN(c,pC);f=AO(b,c,d,e,g);if(f!=null){AICast(c,f,e,HJ);return;}}void GO(int b,unit c,unitgroup d){order
e;if(AIEvalTacticalData(c,null)){return;}if(AITechCount(b,Zy,ox)==0){return;}AISetWantsToUpgrade(c);e=FL(b,qF,0);if(!UnitOrderIsValid(c,e)){return;}AICast(c,e,nH,IJ);}float HO(int b,unit c){return 1;}void JO(int b,unit c,unitgroup d){order e=FL(b,sF,0);string f=AIGetBullyType(c);if(UnitOrderCount(c)>0){return;}if(!UnitOrderIsValid(c,e)){return;}if(f!=my){return;}if(AIGetHomePosition(c)==mH){return;}if(!PointsInRange(UnitGetPosition(c),AIGetHomePosition(c),IO)){return;}AICast(c,e,nH,IJ);}void KO(int b,unit c,unitgroup d){order e=FL(b,tF,0);string f=AIGetBullyType(c);if(UnitOrderCount(c)>0){return;}if(!UnitOrderIsValid(c,e)){return;}if(f==my){if(AIGetHomePosition(c)!=mH){if(PointsInRange(UnitGetPosition(c),AIGetHomePosition(c),IO)){return;}}}AICast(c,e,nH,IJ);}float LO(int b,unit c){return HN(b,mF,kN)+1;}order MO(int b,unit c,unitgroup d,marker e){order f;float g;aifilter h;bool i;f=FL(b,mF,0);if(!UnitOrderIsValid(c,f)){return null;}g=IN(b,tD,hN)*IN(b,sD,NM);h=AIFilter(b);AISetFilterAlliance(h,jx);AISetFilterBits(h,UnitFilterStr(CN(b,mF,oN)));AISetFilterRange(h,c,LO(b,c));AISetFilterMarker(h,sN,tN,e);AISetFilterLife(h,g*qN,wN);AISetFilterLifeSortReference(h,g,g*rN);i=AINearbyPlaneTest(UnitGetPosition(c),b,LO(b,c),Yq,rx);AISetFilterCanAttackAlly(h,yN,i);d=AIGetFilterGroup(h,d);return AIUnitGroupGetValidOrder(d,f,c,VN);}void NO(int b,unit c,unitgroup d){order e;marker f;if(UnitOrderHasAbil(c,mF)){return;}f=YN(c,GC);e=MO(b,c,d,f);if(e!=null){AICast(c,e,nH,IJ);}}float OO(int b,unit c){return MaxF(HN(b,pE,kN)+1,HN(b,aF,kN)+1);}order PO(int b,unit c,unitgroup d,marker e){order f;float g;aifilter h;f=FL(b,aF,0);if(!UnitOrderIsValid(c,f)){return null;}g=NN(b,qD,NM);h=AIFilter(b);AISetFilterAlliance(h,jx);AISetFilterBits(h,UnitFilterStr(CN(b,aF,oN)));AISetFilterRange(h,c,HN(b,aF,kN)+1);AISetFilterLifePerMarker(h,g,e);AISetFilterLifeSortReference(h,g,g*rN);d=AIGetFilterGroup(h,d);return AIUnitGroupGetValidOrder(d,f,c,VN);}void UO(int b,unit c,unitgroup d){marker e;order f;int
g;if(AIIsCampaign(b)){if(RandomInt(0,TO)!=1){return;}}if(AIEvalTacticalData(c,null)){return;}e=YN(c,EC);f=PO(b,c,d,e);if(f!=null){AICast(c,f,e,IJ);return;}}float VO(int b,unit c){return JN(b,BD,lN);}order XO(int b,unit c,unitgroup d,marker e){order f;int g;unit h;bool i;unitgroup j;aifilter k;unitfilter l;int m;f=FL(b,DE,0);if(!UnitOrderIsValid(c,f)){return null;}m=NN(b,dD,VM)*2;i=(UnitGetPropertyInt(c,Dx,Fx)>WO);if(WN(b,DJ,zJ)){i=false;}k=AIFilter(b);AISetFilterAlliance(k,jx);AISetFilterLife(k,NN(b,dD,NM)*2,wN-m);AISetFilterLifeMod(k,mw,m);AISetFilterMarker(k,sN,tN,e);if(i){l=UnitFilterStr("Structure;Missile,Dead,Stasis,Worker");}else {l=UnitFilterStr("-;Missile,Dead,Stasis,Worker");}d=AIGetFilterGroup(k,d);g=UnitGroupCount(d,Ix);while(g>0){h=UnitGroupUnit(d,g);g=g-1;if(UnitGetType(h)==wy){continue;}j=UnitGroupFilterAlliance(AIFindUnits(b,null,UnitGetPosition(h),IN(b,dD,QM),dx),b,ro,0);if(UnitGroupCount(j,Jx)>0){continue;}OrderSetTargetUnit(f,h);if(UnitOrderIsValid(c,f)){return f;}}return null;}void YO(int b,unit c,unitgroup d){marker e=YN(c,wC);order f;d=UnitGroupFilterPlane(d,Xq,0);f=XO(b,c,d,e);if(f==null){return;}AICast(c,f,e,HJ);}order ZO(int b,unit c,unitgroup d,marker e){order f;aifilter g;float h;if(!aO(UnitOrder(c,0))){return null;}f=FL(b,vF,0);if(!UnitOrderIsValid(c,f)){return null;}h=IN(b,vD,NM);g=AIFilter(b);AISetFilterAlliance(g,jx);AISetFilterLifePerMarker(g,h,e);AISetFilterLifeSortReference(g,h,h*rN);d=AIGetFilterGroup(g,d);return AIUnitGroupGetValidOrder(d,f,c,VN);}void aP(int b,unit c,unitgroup d){marker e;order f;if(UnitOrderHasAbil(c,vF)){return;}e=YN(c,IC);f=ZO(b,c,d,e);if(f!=null){AICast(c,f,e,IJ);return;}}float bP(int b,unit c){return JN(b,ED,lN)+2;}point cP(int b,unit c,unitgroup d,bool e){int f;int g;int h;int i;int j;string k=AIGetBullyType(c);point l=UnitGetPosition(c);point m;unitgroup n;int
o;d=UnitGroupFilterRegion(d,RegionCircle(l,bP(b,null)),0);g=UnitGroupCount(d,Jx);d=UnitGroupFilterPlane(d,Xq,0);h=UnitGroupCount(d,Jx);g=g-h;if(k!=null&&h==0&&g==0&&UnitOrderCount(c)==0){if(k==UnitGetType(c)){return null;}else {return UnitGetPosition(c);}}n=UnitGroupFilterThreat(d,c,null,0);o=UnitGroupCount(n,Jx);if(e){if(h==0){return UnitGetPosition(c);}if(g>=o+3||(g>0&&o==0)){return UnitGetPosition(c);}}else {if(g!=0){return null;}if(h>0){i=CliffLevel(l);while(h>0){m=UnitGetPosition(UnitGroupUnit(d,h));j=CliffLevel(m);if(i>=j){return m;}h=h-1;}}}return null;}void dP(int b,unit c,unitgroup d){order e=FL(b,sE,0);unitgroup f;int g;if(!UnitOrderIsValid(c,e)){return;}f=UnitGroupFilterRegion(d,RegionCircle(UnitGetPosition(c),bP(b,null)),0);f=UnitGroupFilterPlane(f,Yq,0);g=UnitGroupCount(f,Jx);if(g==0&&UnitOrderCount(c)>0){return;}if(cP(b,c,d,true)==null){return;}AICast(c,e,nH,IJ);}void eP(int b,unit c,unitgroup d){point e;order f=FL(b,JD,0);if(!UnitOrderIsValid(c,f)){return;}e=cP(b,c,d,false);if(e==null){return;}AICast(c,f,nH,IJ);AISetTacticalAttackTargetPoint(c,e);}unit iP(int b,unit c,unitgroup d,bool e){int f;unit g;bool h;if(!e){if(UnitCargoValue(c,Px)==0){return null;}}f=UnitGroupCount(d,Ix);while(f>0){g=UnitGroupUnit(d,f);f=f-1;if(!UnitIsAlive(g)){continue;}if(!e){if(UnitTestState(g,Hx)){continue;}}h=true;if(AIControlForceToMove(g)){h=false;}else if(UnitOrderCount(g)>0){h=false;}else if(AIControlWantsToMove(g)){if(!AIUnitIsInCombat(g)&&!AIUnitIsInCombat(c)){h=false;}}else {if(AIGetHomePosition(g)==mH){h=false;}else if(!PointsInRange(UnitGetPosition(c),AIGetHomePosition(g),fP)){h=false;}}if(h==e){continue;}return g;}return null;}bool jP(int b,unit c,unitgroup d,int e,int f,string g,string h){unitgroup i;int j;unit k;order l=null;bool m=false;bool n;d=UnitGroupFilterThreat(d,c,null,0);d=UnitGroupFilterRegion(d,RegionCircle(UnitGetPosition(c),e),0);if(UnitGroupCount(d,Jx)==0){if(AIIsCampaign(b)){m=true;}else
if(AIGetDifficulty(b,pJ)){m=true;}if(m&&(h==yF)){k=iP(b,c,UnitCargoGroup(c),gP);if(k!=null){l=FL(b,h,CF);OrderSetTargetPassenger(l,k);}if(l==null){k=iP(b,c,AIFindUnits(b,g,UnitGetPosition(c),fP,dx),hP);if(k!=null){l=FL(b,h,AF);OrderSetTargetUnit(l,k);}}}else {if(UnitCargoValue(c,Ox)==0){return false;}l=FL(b,h,BF);}}else {if(UnitCargoValue(c,Px)==0){return false;}if(h==zF){if(!AIAnyWorkersFleeingNearby(b,UnitGetPosition(c),8.0)){return false;}}i=AIFindUnits(b,g,UnitGetPosition(c),f,dx);j=UnitGroupCount(i,Ix);while(j>0){k=UnitGroupUnit(i,j);j=j-1;if(!UnitIsAlive(k)){continue;}if(UnitTestState(k,Hx)){continue;}if(h==zF){l=FL(b,h,DF);}else {l=FL(b,h,AF);OrderSetTargetUnit(l,k);}break;}}if(!UnitOrderIsValid(c,l)){return false;}AICast(c,l,nH,IJ);return true;}order kP(int b,unit c){unitgroup d;int e;unit f;order g;aifilter h;g=FL(b,eF,0);if(!UnitOrderIsValid(c,g)){return null;}d=AIFindUnits(b,"SupplyDepotUnderground",UnitGetPosition(c),KN(b,Fz,iN)+HN(b,eF,kN),dx);h=AIFilter(b);AISetFilterBits(h,UnitFilterStr(CN(b,eF,oN)));AISetFilterBehaviorCount(h,uN,vN,RC);d=AIGetFilterGroup(h,d);return AIUnitGroupGetValidOrder(d,g,c,VN);}bool lP(int b,unit c){unitgroup d;int e;unit f;order g;g=FL(b,JE,0);if(!UnitOrderIsValid(c,g)){return false;}d=AIFindUnits(b,rz,UnitGetPosition(c),HN(b,JE,kN),dx);d=AIFilterGathering(d,Rr,BN);e=UnitGroupCount(d,Ix);while(e>0){f=UnitGroupUnit(d,e);e=e-1;g=FL(b,JE,0);OrderSetTargetPoint(g,UnitGetPosition(f));if(!UnitOrderIsValid(c,g)){continue;}AICast(c,g,nH,IJ);return true;}return false;}void mP(int b,unit c,unitgroup d){order e;if(jP(b,c,d,10,10,rz,zF)){return;}if(AIEvalTacticalData(c,null)){return;}if(AIIsCampaign(b)){return;}if(bM(b)){if(UnitGetPropertyInt(c,wx,Fx)<150){return;}}if(lP(b,c)){return;}e=kP(b,c);if(e!=null){AICast(c,e,nH,IJ);return;}}void nP(int b,unit c,unitgroup d){jP(b,c,d,8,10,nz,yF);}bool oP(int b,unit c){order d;point e;d=FL(b,VE,0);if(!UnitOrderIsValid(c,d)){return false;}e=AIGetCloakedAttacker(b);if(e==null){}if(e==null){return
false;}OrderSetTargetPoint(d,e);if(!UnitOrderIsValid(c,d)){return false;}AICast(c,d,nH,IJ);AIClearCloakedAttacker(b,e);return true;}void pP(int b,unit c,unitgroup d){if(AIEvalTacticalData(c,null)){return;}if(!oP(b,c)){mP(b,c,d);}}float qP(int b,unit c){return IN(b,dD,QM)+1.0;}void rP(int b,unit c,unitgroup d){int e;marker f=YN(c,xC);aifilter g=AIFilter(b);d=AIFindUnits(b,null,UnitGetPosition(c),qP(b,c),dx);AISetFilterAlliance(g,ix);AISetFilterMarker(g,sN,tN,f);AISetFilterSelf(g,c);d=AIGetFilterGroup(g,d);e=UnitGroupCount(d,Ix);while(e>0){AICastFlee(UnitGroupUnit(d,e),c,6,f);e=e-1;}}float sP(int b,unit c){return 10;}order vP(int b,unit c,unitgroup d,marker e){float f;unitgroup g;aifilter h;order i=GL(b,c,WE);if(!i){return null;}h=AIFilter(b);AISetFilterBits(h,UnitFilterStr(CN(b,WE,oN)));AISetFilterAlliance(h,jx);f=IN(b,oD,NM);AISetFilterLife(h,f*qN,wN);AISetFilterMarker(h,sN,tN,e);AISetFilterLifeSortReference(h,f,f*rN);g=AIGetFilterGroup(h,d);return AIUnitGroupGetValidOrder(g,i,c,VN);}bool wP(int b,unit c,unitgroup d,bool e){point f;order g=GL(b,c,LD);float h;if(!g){return false;}if(e){h=1.0;}else {h=2.0;}f=AIBestTargetPoint(TN(b,AD,d),2,40,h,JN(b,AD,lN),UnitGetPosition(c),sP(b,c),DH);if(!f){return false;}OrderSetTargetPoint(g,f);if(!UnitOrderIsValid(c,g)){return false;}AICast(c,g,nH,HJ);return true;}float xP(int b){return HN(b,LD,cN)+HN(b,WE,cN);}void zP(int b,unit c,unitgroup d){order e;marker f;bool g;f=YN(c,FC);e=vP(b,c,d,f);if(e!=null){AICast(c,e,f,HJ);return;}g=UnitGetPropertyInt(c,Dx,Fx)<yP;if(!g&&UnitGetPropertyInt(c,wx,Fx)<xP(b)){return;}if(wP(b,c,d,g)){return;}}float AP(int b,unit c){return MaxF(HN(b,nF,kN),HN(b,bF,kN))+1;}order BP(int b,unit c){order d;unitgroup e;aifilter f;d=FL(b,nF,0);if(!UnitOrderIsValid(c,d)){return null;}e=AIFindUnits(b,null,UnitGetPosition(c),HN(b,nF,kN)+1,dx);f=AIFilter(b);AISetFilterAlliance(f,ix);AISetFilterLifeLost(f,IN(b,uD,ZM),wN);e=AIGetFilterGroup(f,e);return AIUnitGroupGetValidOrder(e,d,c,UN);}order CP(int b,unit c){order d;unitgroup e;int
f;if(UnitOrder(c,0)!=null){return null;}d=FL(b,bF,0);if(!UnitOrderIsValid(c,d)){return null;}f=TechTreeBehaviorCount(b,MC,lx)*4+TechTreeUnitCount(b,YA,lx);if(f>=10){return null;}e=AIFindUnits(b,sB,UnitGetPosition(c),15,dx);return AIUnitGroupGetValidOrder(e,d,c,VN);}order DP(int b,unit c){order d;point e;if(UnitOrder(c,0)!=null){return null;}d=FL(b,SE,1);if(!UnitOrderIsValid(c,d)){return null;}e=AIGetBestCreepSpot(b,c,8);if(e==null){return null;}OrderSetTargetPlacement(d,e,c,SA);if(!UnitOrderIsValid(c,d)){return null;}return d;}void EP(int b,unit c,unitgroup d){order e;unit f;if(AIEvalTacticalData(c,null)){return;}e=BP(b,c);if(e!=null){AICast(c,e,nH,IJ);return;}e=CP(b,c);if(e!=null){AICast(c,e,nH,IJ);return;}e=DP(b,c);if(e!=null){AICast(c,e,nH,HJ);return;}}float FP(int b,unit c){return MaxF(HN(b,BE,kN),HN(b,FE,kN))+1;}order HP(int b,unit c,unitgroup d,marker e,marker f,bool g){order h;aifilter i;unit j;aifilter k;unitgroup l;int m;int n;h=FL(b,FE,0);if(!UnitOrderIsValid(c,h)){return null;}m=0;n=0;k=AIFilter(b);AISetFilterAlliance(k,jx);AISetFilterPlane(k,Xq);m=UnitGroupCount(AIGetFilterGroup(k,d),Jx);AISetFilterPlane(k,Yq);n=UnitGroupCount(AIGetFilterGroup(k,d),Jx);i=AIFilter(b);AISetFilterAlliance(i,jx);AISetFilterBits(i,UnitFilterStr(CN(b,FE,oN)));AISetFilterRange(i,c,HN(b,FE,kN)+1);AISetFilterLife(i,GP,wN);AISetFilterMarker(i,sN,tN,e);AISetFilterCanAttackEnemy(i,m,n);d=AIGetFilterGroup(i,d);i=AIFilter(b);AISetFilterMarker(i,sN,tN,f);d=AIGetFilterGroup(i,d);return AIUnitGroupGetValidOrder(d,h,c,UN);}float IP(int b){return HN(b,FE,cN)+HN(b,BE,cN);}order JP(int b,unit c,unitgroup d,bool e){order f;int g;aifilter h;point i;unit j;unitgroup k;f=FL(b,BE,0);if(!UnitOrderIsValid(c,f)){return null;}g=UnitGetPropertyInt(c,wx,Fx);if(g<IP(b)&&!e){return null;}h=AIFilter(b);AISetFilterAlliance(h,jx);AISetFilterBits(h,UnitFilterStr(EN(b,FD,nN)));AISetFilterRange(h,c,HN(b,BE,kN)+1);AISetFilterLifePercent(h,xN,wN);k=AIGetFilterGroup(h,d);j=UnitGroupUnit(k,UnitGroupCount(k,Ix));if(j==null){return
null;}i=AIPlacementNearbyFindTest(b,UnitGetPosition(j),5.0,XA);if(i==mH){return null;}OrderSetTargetPoint(f,i);if(!UnitOrderIsValid(c,f)){return null;}return f;}void NP(int b,unit c,unitgroup d){marker e;marker f;order g;unitfilter h;bool i;if(AIEvalTacticalData(c,null)){return;}i=(UnitGetPropertyInt(c,Dx,Fx)<MP);if(!i){h=UnitFilterStr("-;Missile,Dead,Stasis,Worker");if(AIAllyEnemyRatio(b,UnitGetPosition(c),h,FP(b,c),LP)>KP){return;}}g=JP(b,c,d,i);if(g!=null){AICast(c,g,nH,HJ);}e=YN(c,AC);f=YN(c,tC);g=HP(b,c,d,e,f,i);if(g!=null){AICast(c,g,e,HJ);return;}}float PP(int b,unit c){return OP;}order QP(int b,unit c,unitgroup d,marker e){order f;unitgroup g;unitgroup h;unit i;point j;float k;unit l;bool m=false;int n;aifilter o;aifilter p;f=FL(b,UE,0);if(!UnitOrderIsValid(c,f)){return null;}p=AIFilter(b);AISetFilterAlliance(p,jx);AISetFilterBits(p,UnitFilterStr(DN(b,XC,eN)));AISetFilterRange(p,c,PP(b,c));h=AIGetFilterGroup(p,d);j=UnitGetPosition(c);i=UnitGroupNearestUnit(h,j);if(i!=null){k=DistanceBetweenPoints(j,UnitGetPosition(i));}else {k=PP(b,c);}o=AIFilter(b);AISetFilterAlliance(o,jx);AISetFilterBits(o,UnitFilterStr(CN(b,UE,oN)));AISetFilterRange(o,c,k);n=NN(b,WC,NM);AISetFilterLifePerMarker(o,n,e);m=AINearbyPlaneTest(UnitGetPosition(c),b,PP(b,c),Yq,rx);AISetFilterCanAttackAlly(o,yN,m);g=AIGetFilterGroup(o,d);l=UnitGroupNearestUnit(g,j);if(l==null){return null;}OrderSetTargetUnit(f,l);if(!UnitOrderIsValid(c,f)){return null;}return f;}void RP(int b,unit c,unitgroup d){marker e;order f;if(AIEvalTacticalData(c,null)){return;}e=YN(c,DC);f=QP(b,c,d,e);if(f!=null){AICast(c,f,e,IJ);}}float SP(int b,unit c){return KN(b,gB,mN)+1;}order UP(int b,unit c,unitgroup d,float e){int f=-1;point g;order h;point i;float j;h=FL(b,jE,0);if(!UnitOrderIsValid(c,h)){return null;}f=AIGetPlayerGroup(d);if(f==-1){return null;}if(WN(b,EJ,zJ)){i=CameraGetTarget(f);g=UnitGetPosition(c);j=DistanceBetweenPoints(i,g);if(j<20){return
null;}}if(AINearbyUnits(b,KA,g,e,1)||AINearbyUnits(b,LA,g,e,1)||AINearbyUnits(b,MA,g,e,1)||AINearbyUnits(b,PA,g,e,1)||AINearbyUnits(b,NA,g,e,1)){return null;}if((UnitGroupCount(AIFilterPathable(AIFindUnits(f,ny,g,e,TP),g),Jx)>=2)||(UnitGroupCount(AIFilterPathable(AIFindUnits(f,lB,g,e,TP),g),Jx)>=2)||(UnitGroupCount(AIFilterPathable(AIFindUnits(f,nz,g,e,TP),g),Jx)>=2)){return h;}return null;}bool VP(int b,unit c,unitgroup d){order e;unitgroup f;region g;aifilter h;point i;bool j;bool k;float l;if(AIIsCampaign(b)){return false;}if(UnitOrderHasAbil(c,jE)){return false;}g=RegionCircle(UnitGetPosition(c),SP(b,c));f=UnitGroupAlliance(b,rx,g,null,dx);i=UnitGetPosition(c);l=SP(b,c);j=AINearbyPlaneTest(i,b,l,Xq,sx);k=AINearbyPlaneTest(i,b,l,Yq,sx);h=AIFilter(b);AISetFilterCanAttackAlly(h,j,k);f=AIGetFilterGroup(h,f);if(UnitGroupCount(f,Ix)==0){e=UP(b,c,d,l);if(e!=null){AICast(c,e,nH,HJ);return true;}}return false;}void WP(int b,unit c,unitgroup d){order e;marker f;marker g;if(VP(b,c,d)){return;}}float XP(int b,unit c){return KN(b,dB,mN);}void YP(int b,unit c,unitgroup d,string e){unitgroup f;order g;int h;region i;unitgroup j;unitgroup k;if(AIIsFollowingUnit(c,e)){return;}g=FL(b,HD,0);if(!UnitOrderIsValid(c,g)){return;}i=RegionCircle(UnitGetPosition(c),SP(b,c));k=UnitGroupAlliance(b,sx,i,null,dx);h=AIGetPlayerGroup(k);if(h==-1){return;}f=AIFindUnits(h,e,UnitGetPosition(c),XP(b,c),dx);g=AIUnitGroupGetValidOrder(f,g,c,UN);if(g!=null){AICast(c,g,nH,IJ);return;}g=FL(b,HD,0);if(!UnitOrderIsValid(c,g)){return;}g=AIUnitGroupGetValidOrder(d,g,c,UN);if(g!=null){AICast(c,g,nH,IJ);return;}return;}void ZP(int b,unit c,unitgroup d){YP(b,c,d,lB);}void aQ(int b,unit c,unitgroup d){YP(b,c,d,nz);}void bQ(int b,unit c,unitgroup d){YP(b,c,d,ny);}