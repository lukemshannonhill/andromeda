/*
 * Generated by classgen, version 1.5
 * 24.10.10 21:59
 */
package com.sc2mod.andromeda.syntaxNodes.util;
import com.sc2mod.andromeda.syntaxNodes.*;

public abstract class NoResultVisitorAdapter<P> implements NoResultVisitor<P> {

  public void visit(GlobalStructureListNode globalStructureListNode,P state) { visitDefault(globalStructureListNode,state); }
  public void visit(ModifierListNode modifierListNode,P state) { visitDefault(modifierListNode,state); }
  public void visit(AnnotationListNode annotationListNode,P state) { visitDefault(annotationListNode,state); }
  public void visit(TypeParamListNode typeParamListNode,P state) { visitDefault(typeParamListNode,state); }
  public void visit(TypeListNode typeListNode,P state) { visitDefault(typeListNode,state); }
  public void visit(MemberDeclListNode memberDeclListNode,P state) { visitDefault(memberDeclListNode,state); }
  public void visit(VarDeclListNode varDeclListNode,P state) { visitDefault(varDeclListNode,state); }
  public void visit(ParameterListNode parameterListNode,P state) { visitDefault(parameterListNode,state); }
  public void visit(VarInitializerListNode varInitializerListNode,P state) { visitDefault(varInitializerListNode,state); }
  public void visit(StmtListNode stmtListNode,P state) { visitDefault(stmtListNode,state); }
  public void visit(ExprListNode exprListNode,P state) { visitDefault(exprListNode,state); }
  public void visit(IdentifierNode identifierNode,P state) { visitDefault(identifierNode,state); }
  public void visit(SourceFileNode sourceFileNode,P state) { visitDefault(sourceFileNode,state); }
  public void visit(PackageDeclNode packageDeclNode,P state) { visitDefault(packageDeclNode,state); }
  public void visit(LiteralNode literalNode,P state) { visitDefault(literalNode,state); }
  public void visit(AnnotationNode annotationNode,P state) { visitDefault(annotationNode,state); }
  public void visit(TypeParamNode typeParamNode,P state) { visitDefault(typeParamNode,state); }
  public void visit(AccessorBodyTransNode accessorBodyTransNode,P state) { visitDefault(accessorBodyTransNode,state); }
  public void visit(MethodHeaderNode methodHeaderNode,P state) { visitDefault(methodHeaderNode,state); }
  public void visit(MethodDeclaratorTransNode methodDeclaratorTransNode,P state) { visitDefault(methodDeclaratorTransNode,state); }
  public void visit(ParameterNode parameterNode,P state) { visitDefault(parameterNode,state); }
  public void visit(ArrayInitNode arrayInitNode,P state) { visitDefault(arrayInitNode,state); }
  public void visit(LocalVarDeclNode localVarDeclNode,P state) { visitDefault(localVarDeclNode,state); }
  public void visit(ArrayDimensionsNode arrayDimensionsNode,P state) { visitDefault(arrayDimensionsNode,state); }
  public void visit(GlobalStructureNode globalStructureNode,P state) { visitDefault(globalStructureNode,state); }
  public void visit(ClassDeclNode classDeclNode,P state) { visitDefault(classDeclNode,state); }
  public void visit(EnrichDeclNode enrichDeclNode,P state) { visitDefault(enrichDeclNode,state); }
  public void visit(GlobalFuncDeclNode globalFuncDeclNode,P state) { visitDefault(globalFuncDeclNode,state); }
  public void visit(GlobalVarDeclNode globalVarDeclNode,P state) { visitDefault(globalVarDeclNode,state); }
  public void visit(GlobalStaticInitDeclNode globalStaticInitDeclNode,P state) { visitDefault(globalStaticInitDeclNode,state); }
  public void visit(InterfaceDeclNode interfaceDeclNode,P state) { visitDefault(interfaceDeclNode,state); }
  public void visit(StructDeclNode structDeclNode,P state) { visitDefault(structDeclNode,state); }
  public void visit(IncludeNode includeNode,P state) { visitDefault(includeNode,state); }
  public void visit(TypeAliasDeclNode typeAliasDeclNode,P state) { visitDefault(typeAliasDeclNode,state); }
  public void visit(TypeExtensionDeclNode typeExtensionDeclNode,P state) { visitDefault(typeExtensionDeclNode,state); }
  public void visit(InstanceLimitSetterNode instanceLimitSetterNode,P state) { visitDefault(instanceLimitSetterNode,state); }
  public void visit(TypeNode typeNode,P state) { visitDefault(typeNode,state); }
  public void visit(BasicTypeNode basicTypeNode,P state) { visitDefault(basicTypeNode,state); }
  public void visit(SimpleTypeNode simpleTypeNode,P state) { visitDefault(simpleTypeNode,state); }
  public void visit(QualifiedTypeNode qualifiedTypeNode,P state) { visitDefault(qualifiedTypeNode,state); }
  public void visit(ArrayTypeNode arrayTypeNode,P state) { visitDefault(arrayTypeNode,state); }
  public void visit(PointerTypeNode pointerTypeNode,P state) { visitDefault(pointerTypeNode,state); }
  public void visit(FuncPointerTypeNode funcPointerTypeNode,P state) { visitDefault(funcPointerTypeNode,state); }
  public void visit(MemberDeclNode memberDeclNode,P state) { visitDefault(memberDeclNode,state); }
  public void visit(MethodDeclNode methodDeclNode,P state) { visitDefault(methodDeclNode,state); }
  public void visit(FieldDeclNode fieldDeclNode,P state) { visitDefault(fieldDeclNode,state); }
  public void visit(StaticInitDeclNode staticInitDeclNode,P state) { visitDefault(staticInitDeclNode,state); }
  public void visit(AccessorDeclNode accessorDeclNode,P state) { visitDefault(accessorDeclNode,state); }
  public void visit(VarDeclNode varDeclNode,P state) { visitDefault(varDeclNode,state); }
  public void visit(UninitedVarDeclNode uninitedVarDeclNode,P state) { visitDefault(uninitedVarDeclNode,state); }
  public void visit(VarAssignDeclNode varAssignDeclNode,P state) { visitDefault(varAssignDeclNode,state); }
  public void visit(VarArrayInitDeclNode varArrayInitDeclNode,P state) { visitDefault(varArrayInitDeclNode,state); }
  public void visit(StmtNode stmtNode,P state) { visitDefault(stmtNode,state); }
  public void visit(BlockStmtNode blockStmtNode,P state) { visitDefault(blockStmtNode,state); }
  public void visit(ExprStmtNode exprStmtNode,P state) { visitDefault(exprStmtNode,state); }
  public void visit(LocalTypeDeclStmtNode localTypeDeclStmtNode,P state) { visitDefault(localTypeDeclStmtNode,state); }
  public void visit(LocalVarDeclStmtNode localVarDeclStmtNode,P state) { visitDefault(localVarDeclStmtNode,state); }
  public void visit(IfStmtNode ifStmtNode,P state) { visitDefault(ifStmtNode,state); }
  public void visit(WhileStmtNode whileStmtNode,P state) { visitDefault(whileStmtNode,state); }
  public void visit(DoWhileStmtNode doWhileStmtNode,P state) { visitDefault(doWhileStmtNode,state); }
  public void visit(ForStmtNode forStmtNode,P state) { visitDefault(forStmtNode,state); }
  public void visit(ForCountStmtNode forCountStmtNode,P state) { visitDefault(forCountStmtNode,state); }
  public void visit(ForEachStmtNode forEachStmtNode,P state) { visitDefault(forEachStmtNode,state); }
  public void visit(BreakStmtNode breakStmtNode,P state) { visitDefault(breakStmtNode,state); }
  public void visit(ContinueStmtNode continueStmtNode,P state) { visitDefault(continueStmtNode,state); }
  public void visit(ReturnStmtNode returnStmtNode,P state) { visitDefault(returnStmtNode,state); }
  public void visit(DeleteStmtNode deleteStmtNode,P state) { visitDefault(deleteStmtNode,state); }
  public void visit(ThrowStmtNode throwStmtNode,P state) { visitDefault(throwStmtNode,state); }
  public void visit(ExplicitConsCallStmtNode explicitConsCallStmtNode,P state) { visitDefault(explicitConsCallStmtNode,state); }
  public void visit(EmptyStmtNode emptyStmtNode,P state) { visitDefault(emptyStmtNode,state); }
  public void visit(ExprNode exprNode,P state) { visitDefault(exprNode,state); }
  public void visit(AssignmentExprNode assignmentExprNode,P state) { visitDefault(assignmentExprNode,state); }
  public void visit(NameExprNode nameExprNode,P state) { visitDefault(nameExprNode,state); }
  public void visit(FieldAccessExprNode fieldAccessExprNode,P state) { visitDefault(fieldAccessExprNode,state); }
  public void visit(ArrayAccessExprNode arrayAccessExprNode,P state) { visitDefault(arrayAccessExprNode,state); }
  public void visit(ConditionalExprNode conditionalExprNode,P state) { visitDefault(conditionalExprNode,state); }
  public void visit(BinOpExprNode binOpExprNode,P state) { visitDefault(binOpExprNode,state); }
  public void visit(UnOpExprNode unOpExprNode,P state) { visitDefault(unOpExprNode,state); }
  public void visit(InstanceofExprNode instanceofExprNode,P state) { visitDefault(instanceofExprNode,state); }
  public void visit(CastExprNode castExprNode,P state) { visitDefault(castExprNode,state); }
  public void visit(SuperExprNode superExprNode,P state) { visitDefault(superExprNode,state); }
  public void visit(ThisExprNode thisExprNode,P state) { visitDefault(thisExprNode,state); }
  public void visit(MethodInvocationExprNode methodInvocationExprNode,P state) { visitDefault(methodInvocationExprNode,state); }
  public void visit(ArrayCreationExprNode arrayCreationExprNode,P state) { visitDefault(arrayCreationExprNode,state); }
  public void visit(NewExprNode newExprNode,P state) { visitDefault(newExprNode,state); }
  public void visit(LiteralExprNode literalExprNode,P state) { visitDefault(literalExprNode,state); }
  public void visit(MetaClassExprNode metaClassExprNode,P state) { visitDefault(metaClassExprNode,state); }
  public void visit(ParenthesisExprNode parenthesisExprNode,P state) { visitDefault(parenthesisExprNode,state); }
  public void visit(KeyOfExprNode keyOfExprNode,P state) { visitDefault(keyOfExprNode,state); }

  public void visitDefault(SyntaxNode s,P state) { }

}
