/*
 * Generated by classgen, version 1.5
 * 24.10.10 21:59
 */
package com.sc2mod.andromeda.syntaxNodes;

import com.sc2mod.andromeda.syntaxNodes.util.*;


public abstract class TypeNode extends SyntaxNode {

  private SyntaxNode parent;

  public String getName() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setName(String name) {
    throw new ClassCastException("tried to call abstract method");
  }

  public TypeListNode getTypeArguments() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setTypeArguments(TypeListNode typeArguments) {
    throw new ClassCastException("tried to call abstract method");
  }

  public FieldAccessExprNode getQualifiedName() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setQualifiedName(FieldAccessExprNode qualifiedName) {
    throw new ClassCastException("tried to call abstract method");
  }

  public TypeNode getWrappedType() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setWrappedType(TypeNode wrappedType) {
    throw new ClassCastException("tried to call abstract method");
  }

  public ExprListNode getDimensions() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setDimensions(ExprListNode dimensions) {
    throw new ClassCastException("tried to call abstract method");
  }

  public TypeNode getReturnType() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setReturnType(TypeNode returnType) {
    throw new ClassCastException("tried to call abstract method");
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public String toString() {
    return toString("");
  }

  public abstract String toString(String tab);
}
