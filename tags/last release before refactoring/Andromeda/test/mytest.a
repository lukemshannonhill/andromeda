class C{
	int i;
}

class D extends C{
	int j;
}

class F extends C{
	int k;

}

// public util class Test{

	// private playergroup p = GetAllPlayers();

	
// }

// string initAndromeda(){
	// TriggerDebugOutput(1, "foo", true);
	// return null;
	// new A();
	// new B().toString();
// }

abstract class Granpa{
	abstract string toString();
}

class Parent extends Granpa{

	int kdf;
	string toString(){
		kdf = 534;
		return "PARENT!";
	}
	
	~Parent(){
		System.debug("parent deleted");
	}
}

class OtherParent extends Granpa{
	int dfsa;
	string toString(){
		dfsa = 34;
		return "PARENT!";
	}
	
	~OtherParent(){
		System.debug("parent deleted");
	}
}

void myFunc() {
    const int a = 0;
}


class Child extends Parent{
	
	string toString(){
		return "CHILD!";
	}
	
	~Child(){
		int i = 6;
		System.debug("child deleted");
	}
}

static{
Parent p = new Parent();
Granpa p2 = new Child();
System.print(p.toString());
System.print(p2.toString());
delete p;
delete p2;
delete new Child();
}